{"version":3,"sources":["api/authApi.js","helpers/setAuthToken.js","actions/authActions.js","actions/constants.js","actions/alertActions.js","sagas/authSagas.js","api/companyApi.js","sagas/companySagas.js","actions/companyActions.js","api/labourApi.js","sagas/labourSaga.js","actions/labourActions.js","actions/coordinatorActions.js","api/coordinatorApi.js","sagas/coordinatorSaga.js","sagas/index.js","reducers/authReducer.js","reducers/alertReducer.js","reducers/companyReducer.js","reducers/labourReducer.js","reducers/coordinatorReducer.js","reducers/index.js","store.js","middlewares/index.js","components/Nav.js","components/LanguageSelection.js","components/ShowAlert.js","components/Register.js","components/CheckEntity.js","utils/source-data.js","components/DropdownSelector.js","components/CompanyOnBoard.js","components/CompanyOnBoard2.js","components/LabourOnBoard.js","components/CoordinatorOnBoard.js","components/CoordinatorRegister.js","components/Login.js","components/EntitySelection.js","components/SideNav.js","components/TotalLabours.js","components/CompanyHeader.js","helpers/arrayTransform.js","helpers/datasource.js","components/CompanyItem.js","components/LabourSelection.js","components/DashboardHome.js","components/CompanyRequests.js","components/CompanyInfo.js","components/AddLocation.js","components/DashboardDetails.js","components/MarketTrends.js","components/WorkersList.js","components/Dashboard.js","components/TotalCompanies.js","components/CoordinatorHeader.js","components/CoordinatorCompanySelection.js","components/CoordinatorDashboardHome.js","components/CoordinatorRequests.js","components/CoordinatorInfo.js","components/CoordinatorDashboardDetails.js","components/CoordinatorCompanyList.js","components/CoordinatorDashboard.js","components/LabourCompanyHeader.js","components/CompanySelection.js","components/LabourDashboardHome.js","components/LabourRequests.js","components/LabourInfo.js","components/LabourDashboardDetails.js","components/CompanyList.js","components/LabourDashboard.js","components/PrivateRoute.js","App.js","i18n.js","index.js"],"names":["loadUserApi","axios","get","registerUserApi","body","post","headers","loginUserApi","setAuthToken","token","defaults","common","loadUser","localStorage","type","setAlert","msg","alertType","payload","id","registerUserSaga","loginUserSaga","userLoadedSaga","logoutSaga","authSagas","action","call","data","put","uuidv4","errors","response","all","map","error","console","log","takeLatest","addCompanyApi","getCompanyNameApi","lookingForApi","currentRequestsApi","deleteCompanyApi","delete","getLocationApi","getEditableNamesApi","addNewLocationApi","fetchLabourSupplyApi","fetchLabourDemandApi","fetchAvgWageApi","fetchAvgWorkTimeApi","updateContactDetailsApi","addCompanySaga","getCompanyNameSaga","lookingForTextSaga","companyRequestSaga","addLocationSaga","addNewLocationSaga","fetchEditableNameSaga","deleteAccountSaga","labourSupplySaga","labourDemandSaga","averageWageSaga","averageWorkTimeSaga","updateContactDetailSaga","companySagas","addLabourRequirementApi","activeLabourStatsApi","labourSelectionApi","addLabourApi","companySelectionApi","activeJobStatApi","labourLookingForApi","labourNameApi","jobsAvailableStatsApi","deleteLabourApi","editableLabourApi","updateLabourContactDetailsApi","addLabourRequirementSaga","fetchActiveLabourSaga","fetchLabourSelectionSaga","addLabourSaga","companySelectionSaga","fetchActiveJobStatSaga","labourLookingForSaga","fetchLabourNameSaga","deleteLabourSaga","fetchEditableLabourSaga","updatePhoneContactSaga","fetchAvailableJobStatSaga","labourSaga","message","coordinatorLabourNameSuccess","fetchCoordinatorNameApi","fetchCoordinatorJobAvailableApi","coordinatorAddLabourApi","coordinatorDeleteApi","coordinatorEditWorkerApi","coordinatorUpdateApi","coordinatorLookingForApi","coordinatorCompanySelectionApi","registerCoordinatorApi","addLabourCoordinatorSaga","registerCoordinatorSaga","coordinatorCompanySelSaga","coordinatorLabourLookingSaga","coordinatorLabourNameSaga","coordinatorAvailabeStatSaga","deleteCoordinatorSaga","editCoordinatorSaga","coordinatorUpdateSaga","coordinatorSaga","rootSaga","initialState","getItem","isAuthenticated","loading","user","companyName","contactPersonName","state","city","lookingFor","isLoading","activeLabours","companyRequestResult","addLocationResult","editableNamesResult","labourSupplyStats","labourDemandStats","avgWageResult","avgWorkTimeResult","companyReducer","lookingForResult","result","stateName","cityName","relocationCost","minimumDurationOfWork","maximumWagePerHour","labourRequired","skillsNeeded","activeLabourLoading","activeLaboursResults","labourSelectionLoading","labourSelection","labourName","companySelectionResult","activeJobStatResult","labourLookingForResult","jobAvailableStat","editableLabourDetails","labourRequirementReducer","coordinatorReducer","rootReducer","combineReducers","auth","alerts","filter","alert","company","labour","labourReducer","coordinator","sagaMiddleware","createSagaMiddleware","middlewares","store","next","setItem","setTimeout","dispatch","removeItem","createStore","composeWithDevTools","applyMiddleware","run","withRouter","location","t","useTranslation","useState","current","setCurrent","useDispatch","useSelector","mode","selectedKeys","style","position","zIndex","width","top","onClick","e","key","Item","to","float","LanguageSelection","i18n","className","marginRight","height","fontSize","padding","backgroundColor","borderRadius","size","lang","changeLanguage","ShowAlert","showIcon","RegisterForm","Option","Select","undefined","entity","setEntity","length","boxShadow","title","initialValues","number","password","onFinish","values","phoneNumber","name","rules","required","prefix","color","placeholder","Password","onChange","val","value","htmlType","CheckEntity","isEmpty","StateRegionData","C","StateDropdown","props","countries","_filterCountries","whitelist","blacklist","this","valueType","labelType","countryName","countrySlug","showDefaultOption","defaultOptionLabel","classes","onBlur","disabled","attrs","getDefaultOption","getCountries","React","Component","defaultProps","RegionDropdown","regions","getRegions","country","bind","nextProps","setState","searchIndex","countryValueType","forEach","i","split","regionPair","regionName","regionShortCode","label","blankOptionLabel","disableWhenEmpty","getRegionList","filteredCountries","indexOf","State","region","setRegion","useEffect","contactPersonDesignation","gstNumber","address","history","push","skill","setSkill","valuePropName","StatePref","setStatePref","regionPref","setRegionPref","workerName","workerState","workerCity","workerSkills","statePreference","cityPreference","minimumWorkDuration","minimumWage","Form","useForm","form","isMultiple","setMultiple","labourerName","labourerPhoneNumber","preferance","labourerState","skills","resetFields","allowClear","autoClearSearchValue","personName","Login","EntitySelection","Menu","SubMenu","pathname","defaultOpenKeys","maxWidth","left","icon","TotalLabours","totalLabour","options","labels","topStates","series","percentageShare","CompanyHeader","overflow","header","bordered","dataSource","item","renderItem","arrayTransform","arr","join","arrayTransformCompany","companyPhoneNumber","companyContactName","companyCity","transFormJobObject","obj","Object","keys","jobs","columns","dataIndex","companyColumns","CompanyItem","margin","workersList","LabourSelection","finalResult","output","slice","DashboardHome","modalText","visible","modalState","setModalState","workers","numOfDays","totalRequests","display","onOk","onCancel","CompanyInfo","AddLocation","handleCancel","footer","DashboardDetails","MarketTrends","marginBottom","chart","xaxis","text","show","categories","days","supply","demand","textAlign","Math","round","avgWage","avgWorkTime","WorkersList","Dashboard","match","class","exact","path","component","TotalCompanies","totalJobs","LabourCompanyHeader","CoordinatorCompanySelection","CoordinatorDashboardHome","CoordinatorHeader","finalResultStat","CoordinatorInfo","coordinatorName","coordinatorPhoneNumber","LabourDashboardDetails","CoordinatorCompanyList","CoordinatorDashboard","CoordinatorDashboardDetails","CompanySelection","LabourInfo","workerPhoneNumber","LabourDashboard","LabourDashboardHome","CompanyList","PrivateRoute","rest","render","App","Register","LabourOnBoard","CoordinatorOnBoard","CoordinatorRegister","CompanyOnBoard","CompanyOnBoard2","use","Backend","initReactI18next","init","debug","lng","fallbackLng","interpolation","escapeValue","ReactDOM","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.a28235af.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const loadUserApi = () => {\n  return axios.get(\"/api/current\");\n};\n\nexport const registerUserApi = (body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"/api/register\", body, config);\n};\n\nexport const loginUserApi = (body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"/api/login\", body, config);\n};\n","import axios from \"axios\";\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nexport default setAuthToken;\n","import {\n  REGISTER_USER,\n  REGISTER_SUCCESS,\n  USER_LOADED,\n  USER_LOADED_SUCCESS,\n  AUTH_ERROR,\n  LOGIN_USER,\n  LOGIN_SUCCESS,\n  LOGOUT,\n} from \"./constants\";\n\nimport setAuthToken from \"../helpers/setAuthToken\";\n\n//auth error\nexport const authError = () => ({\n  type: AUTH_ERROR,\n});\n\n//load user\nexport const loadUser = () => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  return {\n    type: USER_LOADED,\n  };\n};\n\nexport const loadUserSuccess = (payload) => ({\n  type: USER_LOADED_SUCCESS,\n  payload,\n});\n//register user\nexport const register = ({ phoneNumber, password, type }) => ({\n  type: REGISTER_USER,\n  body: { phoneNumber, password, type },\n});\n\nexport const registerSuccess = (payload) => ({\n  type: REGISTER_SUCCESS,\n  payload,\n});\n\n//login user\nexport const login = ({ phoneNumber, password }) => ({\n  type: LOGIN_USER,\n  body: { phoneNumber, password },\n});\n\nexport const loginSuccess = (payload) => ({\n  type: LOGIN_SUCCESS,\n  payload,\n});\n\n//logout\nexport const logout = () => ({\n  type: LOGOUT,\n});\n","// Auth\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_USER = \"REGISTER_USER\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const USER_LOADED_SUCCESS = \"USER_LOADED_SUCCESS\";\nexport const LOGIN_USER = \"LOGIN_USER\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\n// clear\nexport const CLEAR_ALL = \"CLEAR_ALL\";\n\n// Alert\nexport const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\n\n// Company\nexport const ADD_COMPANY = \"ADD_COMPANY\";\nexport const ADD_COMPANY_SUCCESS = \"ADD_COMPANY_SUCCESS\";\nexport const GET_COMPANY_NAME = \"GET_COMPANY_NAME\";\nexport const GET_COMPANY_NAME_SUCCESS = \"GET_COMPANY_NAME_SUCCESS\";\nexport const LOOKING_FOR_TEXT = \"LOOKING_FOR_TEXT\";\nexport const LOOKING_FOR_TEXT_SUCCESS = \"LOOKING_FOR_TEXT_SUCCESS\";\nexport const COMPANY_REQUESTS = \"COMPANY_REQUESTS\";\nexport const COMPANY_REQUESTS_SUCCESS = \"COMPANY_REQUESTS_SUCCESS\";\nexport const FETCH_ADD_LOCATION = \"FETCH_ADD_LOCATION\";\nexport const FETCH_ADD_LOCATION_SUCCESS = \"FETCH_ADD_LOCATION_SUCCESS\";\nexport const ADD_NEW_LOCATION = \"ADD_NEW_LOCATION\";\nexport const ADD_NEW_LOCATION_SUCCESS = \"ADD_NEW_LOCATION_SUCCESS\";\nexport const FETCH_EDITABLE_NAMES = \"FETCH_EDITABLE_NAMES\";\nexport const FETCH_EDITABLE_NAMES_SUCCESS = \"FETCH_EDITABLE_NAMES_SUCCESS\";\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\nexport const FETCH_LABOUR_SUPPLY = \"FETCH_LABOUR_SUPPLY\";\nexport const FETCH_LABOUR_SUPPLY_SUCCESS = \"FETCH_LABOUR_SUPPLY_SUCCESS\";\nexport const FETCH_LABOUR_DEMAND = \"FETCH_LABOUR_DEMAND\";\nexport const FETCH_LABOUR_DEMAND_SUCCESS = \"FETCH_LABOUR_DEMAND_SUCCESS\";\nexport const FETCH_AVERAGE_WAGE = \"FETCH_AVERAGE_WAGE\";\nexport const FETCH_AVERAGE_WAGE_SUCCESS = \"FETCH_AVERAGE_WAGE_SUCCESS\";\nexport const FETCH_AVERAGE_WORK_TIME = \"FETCH_AVERAGE_WORK_TIME\";\nexport const FETCH_AVERAGE_WORK_TIME_SUCCESS =\n  \"FETCH_AVERAGE_WORK_TIME_SUCCESS\";\nexport const UPDATE_CONTACT_DETAILS = \"UPDATE_CONTACT_DETAILS\";\nexport const UPDATE_CONTACT_DETAILS_SUCCESS = \"UPDATE_CONTACT_DETAILS_SUCCESS\";\n// labour\nexport const ADD_LABOUR_REQUIREMENT = \"ADD_LABOUR_REQUIREMENT\";\nexport const ADD_LABOUR_REQUIREMENT_SUCCESS = \"ADD_LABOUR_REQUIREMENT_SUCCESS\";\nexport const FETCH_ACTIVE_LABOURS = \"FETCH_ACTIVE_LABOURS\";\nexport const FETCH_ACTIVE_LABOURS_SUCCESS = \"FETCH_ACTIVE_LABOURS_SUCCESS\";\nexport const FETCH_LABOUR_SELECTION = \"FETCH_LABOUR_SELECTION\";\nexport const FETCH_LABOUR_SELECTION_SUCCESS = \"FETCH_LABOUR_SELECTION_SUCCESS\";\n\nexport const ADD_LABOUR = \"ADD_LABOUR\";\nexport const COMPANY_SELECTION = \"COMPANY_SELECTION\";\nexport const ADD_LABOUR_SUCCESS = \"ADD_LABOUR_SUCCESS\";\nexport const COMPANY_SELECTION_SUCCESS = \"COMPANY_SELECTION_SUCCESS\";\nexport const FETCH_ACTIVE_JOB_STATS = \"FETCH_ACTIVE_JOB_STATS\";\nexport const FETCH_ACTIVE_JOB_STATS_SUCCESS = \"FETCH_ACTIVE_JOB_STATS_SUCCESS\";\nexport const LABOUR_LOOKING_FOR = \"LABOUR_LOOKING_FOR\";\nexport const LABOUR_LOOKING_FOR_SUCCESS = \"LABOUR_LOOKING_FOR_SUCCESS\";\nexport const FETCH_LABOUR_NAME = \"FETCH_LABOUR_NAME\";\nexport const FETCH_LABOUR_NAME_SUCCESS = \"FETCH_LABOUR_NAME_SUCCESS\";\nexport const FETCH_JOB_AVAILABLE_STATS = \"FETCH_JOB_AVAILABLE_STATS\";\nexport const FETCH_JOB_AVAILABLE_STATS_SUCCESS =\n  \"FETCH_JOB_AVAILABLE_STATS_SUCCESS\";\nexport const DELETE_LABOUR = \"DELETE_LABOUR\";\nexport const DELETE_LABOUR_SUCCESS = \"DELETE_LABOUR_SUCCESS\";\nexport const FETCH_EDITABLE_LABOUR = \"FETCH_EDITABLE_LABOUR\";\nexport const FETCH_EDITABLE_LABOUR_SUCCESS = \"FETCH_EDITABLE_LABOUR_SUCCESS\";\nexport const UPDATE_LABOUR_PHONE_CONTACT = \"UPDATE_LABOUR_PHONE_CONTACT\";\nexport const UPDATE_LABOUR_PHONE_CONTACT_SUCCESS =\n  \"UPDATE_LABOUR_PHONE_CONTACT_SUCCESS\";\n\n// coordinator\n\nexport const REGISTER_COORDINATOR = \"REGISTER_COORDINATOR\";\nexport const ADD_LABOUR_BY_COORDINATOR = \"ADD_LABOUR_BY_COORDINATOR\";\nexport const ADD_LABOUR_BY_COORDINATOR_SUCCESS =\n  \"ADD_LABOUR_BY_COORDINATOR_SUCCESS\";\nexport const COORDINATOR_COMPANY_SELECTION = \"COORDINATOR_COMPANY_SELECTION\";\nexport const COORDINATOR_COMPANY_SELECTION_SUCCESS =\n  \"COORDINATOR_COMPANY_SELECTION_SUCCESS\";\nexport const COORDINATOR_LABOUR_LOOKING_FOR = \"COORDINATOR_LABOUR_LOOKING_FOR\";\nexport const COORDINATOR_LABOUR_LOOKING_FOR_SUCCESS =\n  \"COORDINATOR_LABOUR_LOOKING_FOR_SUCCESS\";\nexport const COORDINATOR_LABOUR_NAME = \"COORDINATOR_LABOUR_NAME\";\nexport const COORDINATOR_LABOUR_NAME_SUCCESS =\n  \"COORDINATOR_LABOUR_NAME_SUCCESS\";\nexport const COORDINATOR_JOB_AVAILABLE_STATS =\n  \"COORDINATOR_JOB_AVAILABLE_STATS\";\nexport const COORDINATOR_JOB_AVAILABLE_STATS_SUCCESS =\n  \"COORDINATOR_JOB_AVAILABLE_STATS_SUCCESS\";\nexport const DELETE_COORDINATOR = \"DELETE_COORDINATOR\";\nexport const COORDINATOR_EDIT_DETAILS = \"COORDINATOR_EDIT_DETAILS\";\nexport const COORDINATOR_EDIT_DETAILS_SUCCESS =\n  \"COORDINATOR_EDIT_DETAILS_SUCCESS\";\nexport const COORDINATOR_UPDATE_DETAILS = \"COORDINATOR_UPDATE_DETAILS\";\nexport const COORDINATOR_UPDATE_DETAILS_SUCCESS =\n  \"COORDINATOR_UPDATE_DETAILS_SUCCESS\";\n","import { SET_ALERT, REMOVE_ALERT } from \"./constants\";\n\nexport const setAlert = (msg, alertType, { id }) => {\n  return {\n    type: SET_ALERT,\n    payload: { msg, alertType, id },\n  };\n};\n\nexport const removeAlert = (id) => ({\n  type: REMOVE_ALERT,\n  payload: id,\n});\n","import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  REGISTER_USER,\n  USER_LOADED,\n  LOGIN_USER,\n  LOGOUT,\n} from \"../actions/constants\";\n\nimport { loadUserApi, registerUserApi, loginUserApi } from \"../api/authApi\";\n\nimport {\n  loadUserSuccess,\n  registerSuccess,\n  loginSuccess,\n  authError,\n  loadUser,\n} from \"../actions/authActions\";\n\nimport { setAlert } from \"../actions/alertActions\";\n\nfunction* registerUserSaga(action) {\n  const body = action.body;\n  try {\n    const { data } = yield call(registerUserApi, body);\n    yield put(registerSuccess(data));\n    yield put(loadUser());\n    yield put(\n      setAlert(`User has been registered and logged in`, \"success\", {\n        id: uuidv4(),\n      })\n    );\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* loginUserSaga(action) {\n  const body = action.body;\n  try {\n    const { data } = yield call(loginUserApi, body);\n    yield put(loginSuccess(data));\n    yield put(loadUser());\n    yield put(\n      setAlert(`User has been logged in`, \"success\", {\n        id: uuidv4(),\n      })\n    );\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* userLoadedSaga(action) {\n  try {\n    const { data } = yield call(loadUserApi);\n    console.log(\"data\", data);\n    yield put(loadUserSuccess(data));\n  } catch (e) {\n    yield put(authError());\n  }\n}\n\nfunction* logoutSaga(action) {\n  yield put(\n    setAlert(`You have been logged out.`, \"success\", {\n      id: uuidv4(),\n    })\n  );\n}\n\nfunction* authSagas() {\n  yield takeLatest(REGISTER_USER, registerUserSaga);\n  yield takeLatest(LOGIN_USER, loginUserSaga);\n  yield takeLatest(LOGOUT, logoutSaga);\n  yield takeLatest(USER_LOADED, userLoadedSaga);\n}\n\nexport default authSagas;\n","import axios from \"axios\";\n\nexport const addCompanyApi = (body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"/api/addCompany\", body, config);\n};\n\nexport const getCompanyNameApi = () => {\n  return axios.get(\"/api/company/getName\");\n};\n\nexport const lookingForApi = () => {\n  return axios.get(\"/api/company/lookingForText\");\n};\n\nexport const currentRequestsApi = () => {\n  return axios.get(\"/api/company/currentRequest\");\n};\n\nexport const deleteCompanyApi = () => {\n  return axios.delete(\"/api/company/deleteCompany\");\n};\n\nexport const getLocationApi = () => {\n  return axios.get(\"/api/company/getLocation\");\n};\n\nexport const getEditableNamesApi = () => {\n  return axios.get(\"/api/company/getEditableCompanyDetails\");\n};\n\nexport const addNewLocationApi = (body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"/api/company/addANewLocation/\", body, config);\n};\n\nexport const fetchLabourSupplyApi = () => {\n  return axios.get(\"/api/stats/getLabourSupply\");\n};\n\nexport const fetchLabourDemandApi = () => {\n  return axios.get(\"/api/stats/getLabourDemand\");\n};\n\nexport const fetchAvgWageApi = () => {\n  return axios.get(\"/api/stats/getAvgWage\");\n};\n\nexport const fetchAvgWorkTimeApi = () => {\n  return axios.get(\"/api/stats/getAvgWorkTime\");\n};\n\nexport const updateContactDetailsApi = (body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"/api/company/updatePhoneAndContactPerson\", body, config);\n};\n","import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  ADD_COMPANY,\n  GET_COMPANY_NAME,\n  LOOKING_FOR_TEXT,\n  COMPANY_REQUESTS,\n  FETCH_ADD_LOCATION,\n  ADD_NEW_LOCATION,\n  FETCH_EDITABLE_NAMES,\n  DELETE_ACCOUNT,\n  FETCH_LABOUR_SUPPLY,\n  FETCH_LABOUR_DEMAND,\n  FETCH_AVERAGE_WAGE,\n  FETCH_AVERAGE_WORK_TIME,\n  UPDATE_CONTACT_DETAILS,\n} from \"../actions/constants\";\n\nimport {\n  addCompanyApi,\n  getCompanyNameApi,\n  lookingForApi,\n  getLocationApi,\n  currentRequestsApi,\n  addNewLocationApi,\n  getEditableNamesApi,\n  deleteCompanyApi,\n  fetchLabourSupplyApi,\n  fetchLabourDemandApi,\n  fetchAvgWageApi,\n  fetchAvgWorkTimeApi,\n  updateContactDetailsApi,\n} from \"../api/companyApi\";\n\nimport {\n  addCompanySuccess,\n  getCompanyNameSucess,\n  companyLookingForSuccess,\n  companyRequestSuccess,\n  addLocation,\n  addLocationSuccess,\n  fetchEditableNames,\n  fetchEditableNamesSuccess,\n  fetchLabourSupplySuccess,\n  fetchLabourDemandSuccess,\n  fetchAvgWageSuccess,\n  fetchAvgWorkTimeSuccess,\n} from \"../actions/companyActions\";\n\nimport { setAlert } from \"../actions/alertActions\";\n\nfunction* addCompanySaga(action) {\n  const body = action.body;\n  try {\n    const { data } = yield call(addCompanyApi, body);\n    yield put(addCompanySuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* getCompanyNameSaga(action) {\n  try {\n    const { data } = yield call(getCompanyNameApi);\n    yield put(getCompanyNameSucess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* lookingForTextSaga(action) {\n  try {\n    const { data } = yield call(lookingForApi);\n    yield put(companyLookingForSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* companyRequestSaga(action) {\n  try {\n    const { data } = yield call(currentRequestsApi);\n    yield put(companyRequestSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* addLocationSaga(action) {\n  try {\n    const { data } = yield call(getLocationApi);\n    yield put(addLocationSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* addNewLocationSaga(action) {\n  try {\n    yield call(addNewLocationApi, action.body);\n    yield put(addLocation());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* fetchEditableNameSaga(action) {\n  try {\n    const { data } = yield call(getEditableNamesApi);\n    yield put(fetchEditableNamesSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* deleteAccountSaga(action) {\n  try {\n    yield call(deleteCompanyApi);\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* labourSupplySaga(action) {\n  try {\n    const { data } = yield call(fetchLabourSupplyApi);\n    yield put(fetchLabourSupplySuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* labourDemandSaga(action) {\n  try {\n    const { data } = yield call(fetchLabourDemandApi);\n    yield put(fetchLabourDemandSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* averageWageSaga(action) {\n  try {\n    const { data } = yield call(fetchAvgWageApi);\n    yield put(fetchAvgWageSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* averageWorkTimeSaga(action) {\n  try {\n    const { data } = yield call(fetchAvgWorkTimeApi);\n    yield put(fetchAvgWorkTimeSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* updateContactDetailSaga(action) {\n  try {\n    yield call(updateContactDetailsApi, action.body);\n    yield put(fetchEditableNames());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* companySagas() {\n  yield takeLatest(ADD_COMPANY, addCompanySaga);\n  yield takeLatest(GET_COMPANY_NAME, getCompanyNameSaga);\n  yield takeLatest(LOOKING_FOR_TEXT, lookingForTextSaga);\n  yield takeLatest(COMPANY_REQUESTS, companyRequestSaga);\n  yield takeLatest(FETCH_ADD_LOCATION, addLocationSaga);\n  yield takeLatest(ADD_NEW_LOCATION, addNewLocationSaga);\n  yield takeLatest(FETCH_EDITABLE_NAMES, fetchEditableNameSaga);\n  yield takeLatest(DELETE_ACCOUNT, deleteAccountSaga);\n  yield takeLatest(FETCH_LABOUR_SUPPLY, labourSupplySaga);\n  yield takeLatest(FETCH_LABOUR_DEMAND, labourDemandSaga);\n  yield takeLatest(FETCH_AVERAGE_WAGE, averageWageSaga);\n  yield takeLatest(FETCH_AVERAGE_WORK_TIME, averageWorkTimeSaga);\n  yield takeLatest(UPDATE_CONTACT_DETAILS, updateContactDetailSaga);\n}\n\nexport default companySagas;\n","import {\n  ADD_COMPANY,\n  ADD_COMPANY_SUCCESS,\n  GET_COMPANY_NAME_SUCCESS,\n  GET_COMPANY_NAME,\n  LOOKING_FOR_TEXT,\n  LOOKING_FOR_TEXT_SUCCESS,\n  COMPANY_REQUESTS,\n  COMPANY_REQUESTS_SUCCESS,\n  FETCH_ADD_LOCATION,\n  FETCH_ADD_LOCATION_SUCCESS,\n  ADD_NEW_LOCATION,\n  FETCH_EDITABLE_NAMES,\n  FETCH_EDITABLE_NAMES_SUCCESS,\n  DELETE_ACCOUNT,\n  FETCH_LABOUR_SUPPLY,\n  FETCH_LABOUR_SUPPLY_SUCCESS,\n  FETCH_LABOUR_DEMAND,\n  FETCH_LABOUR_DEMAND_SUCCESS,\n  FETCH_AVERAGE_WAGE,\n  FETCH_AVERAGE_WAGE_SUCCESS,\n  FETCH_AVERAGE_WORK_TIME,\n  FETCH_AVERAGE_WORK_TIME_SUCCESS,\n  UPDATE_CONTACT_DETAILS,\n  CLEAR_ALL,\n} from \"./constants\";\n\nexport const addCompany = ({ companyName, contactPersonName, contactPersonDesignation, gstNumber, address, state, city }) => {\n  return {\n    type: ADD_COMPANY,\n    body: { companyName, contactPersonName, contactPersonDesignation, gstNumber, address,state, city },\n  };\n};\n\nexport const addCompanySuccess = (payload) => ({\n  type: ADD_COMPANY_SUCCESS,\n  payload,\n});\n\nexport const getCompanyName = () => ({\n  type: GET_COMPANY_NAME,\n});\n\nexport const companyLookingFor = () => ({\n  type: LOOKING_FOR_TEXT,\n});\n\nexport const companyLookingForSuccess = (payload) => ({\n  type: LOOKING_FOR_TEXT_SUCCESS,\n  payload,\n});\n\nexport const getCompanyNameSucess = (payload) => ({\n  type: GET_COMPANY_NAME_SUCCESS,\n  payload,\n});\n\nexport const companyRequests = () => ({\n  type: COMPANY_REQUESTS,\n});\n\nexport const companyRequestSuccess = (payload) => ({\n  type: COMPANY_REQUESTS_SUCCESS,\n  payload,\n});\n\nexport const addLocation = () => ({\n  type: FETCH_ADD_LOCATION,\n});\n\nexport const addLocationSuccess = (payload) => ({\n  type: FETCH_ADD_LOCATION_SUCCESS,\n  payload,\n});\n\nexport const addNewLocation = (body) => ({\n  type: ADD_NEW_LOCATION,\n  body,\n});\n\nexport const fetchEditableNames = () => ({\n  type: FETCH_EDITABLE_NAMES,\n});\n\nexport const fetchEditableNamesSuccess = (payload) => ({\n  type: FETCH_EDITABLE_NAMES_SUCCESS,\n  payload,\n});\n\nexport const deleteAccount = () => ({\n  type: DELETE_ACCOUNT,\n});\n\nexport const fetchLabourSupply = () => ({\n  type: FETCH_LABOUR_SUPPLY,\n});\n\nexport const fetchLabourSupplySuccess = (payload) => ({\n  type: FETCH_LABOUR_SUPPLY_SUCCESS,\n  payload,\n});\n\nexport const fetchLabourDemand = () => ({\n  type: FETCH_LABOUR_DEMAND,\n});\n\nexport const fetchLabourDemandSuccess = (payload) => ({\n  type: FETCH_LABOUR_DEMAND_SUCCESS,\n  payload,\n});\n\nexport const fetchAvgWage = () => ({\n  type: FETCH_AVERAGE_WAGE,\n});\n\nexport const fetchAvgWageSuccess = (payload) => ({\n  type: FETCH_AVERAGE_WAGE_SUCCESS,\n  payload,\n});\n\nexport const fetchAvgWorkTime = () => ({\n  type: FETCH_AVERAGE_WORK_TIME,\n});\n\nexport const fetchAvgWorkTimeSuccess = (payload) => ({\n  type: FETCH_AVERAGE_WORK_TIME_SUCCESS,\n  payload,\n});\n\nexport const updateContactDetails = (body) => ({\n  type: UPDATE_CONTACT_DETAILS,\n  body,\n});\n\nexport const clearAll = () => ({\n  type: CLEAR_ALL,\n});\n","import axios from \"axios\";\n\nexport const addLabourRequirementApi = (body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"api/company/labourRequirement\", body, config);\n};\n\nexport const activeLabourStatsApi = () => {\n  return axios.get(\"api/company/activeLabourStats\");\n};\n\nexport const labourSelectionApi = () => {\n  return axios.get(\"/api/company/labourSelection\");\n};\n\nexport const addLabourApi = (body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"api/worker/onBoard\", body, config);\n};\n\nexport const companySelectionApi = () => {\n  return axios.get(\"/api/labour/companySelection\");\n};\n\nexport const activeJobStatApi = () => {\n  return axios.get(\"/api/labour/activeJobsStats\");\n};\n\nexport const labourLookingForApi = () => {\n  return axios.get(\"/api/labour/lookingForText\");\n};\n\nexport const labourNameApi = () => {\n  return axios.get(\"/api/labour/getName\");\n};\n\nexport const jobsAvailableStatsApi = () => {\n  return axios.get(\"/api/labour/jobsAvailableStats\");\n};\n\nexport const deleteLabourApi = () => {\n  return axios.delete(\"/api/labour/deleteAccount\");\n};\n\nexport const editableLabourApi = () => {\n  return axios.get(\"/api/labour/workerDetails\");\n};\n\nexport const updateLabourContactDetailsApi = (body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"/api/labour/updateDetails\", body, config);\n};\n","import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  ADD_LABOUR_REQUIREMENT,\n  FETCH_ACTIVE_LABOURS,\n  FETCH_LABOUR_SELECTION,\n  ADD_LABOUR,\n  COMPANY_SELECTION,\n  FETCH_ACTIVE_JOB_STATS,\n  LABOUR_LOOKING_FOR,\n  FETCH_LABOUR_NAME,\n  FETCH_JOB_AVAILABLE_STATS,\n  DELETE_LABOUR,\n  FETCH_EDITABLE_LABOUR,\n  UPDATE_LABOUR_PHONE_CONTACT,\n} from \"../actions/constants\";\n\nimport {\n  addLabourRequirementApi,\n  activeLabourStatsApi,\n  labourSelectionApi,\n  addLabourApi,\n  companySelectionApi,\n  activeJobStatApi,\n  labourLookingForApi,\n  labourNameApi,\n  jobsAvailableStatsApi,\n  deleteLabourApi,\n  editableLabourApi,\n  updateLabourContactDetailsApi,\n} from \"../api/labourApi\";\n\nimport {\n  addLabourRequirementsSuccess,\n  activeLabourSuccess,\n  fetchLabourSelectionSucces,\n  addLabourSuccess,\n  companySelectionSuccess,\n  fetchActiveJobStatSuccess,\n  labourLookingForSuccess,\n  fetchLabourNameSuccess,\n  fetchEditableLabour,\n  fetchEditableLabourSuccess,\n  fetchJobAvailableStatSuccess,\n  fetchLabourName,\n} from \"../actions/labourActions\";\n\nimport { setAlert } from \"../actions/alertActions\";\n\nfunction* addLabourRequirementSaga(action) {\n  const body = action.body;\n  try {\n    const { data } = yield call(addLabourRequirementApi, body);\n    yield put(addLabourRequirementsSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* fetchActiveLabourSaga(action) {\n  try {\n    const { data } = yield call(activeLabourStatsApi);\n    yield put(activeLabourSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* fetchLabourSelectionSaga(action) {\n  try {\n    const { data } = yield call(labourSelectionApi);\n    yield put(fetchLabourSelectionSucces(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* addLabourSaga(action) {\n  try {\n    const { data } = yield call(addLabourApi, action.body);\n    yield put(addLabourSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* companySelectionSaga(action) {\n  try {\n    const { data } = yield call(companySelectionApi);\n    yield put(companySelectionSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* fetchActiveJobStatSaga(action) {\n  try {\n    const { data } = yield call(activeJobStatApi);\n    yield put(fetchActiveJobStatSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* labourLookingForSaga(action) {\n  try {\n    const { data } = yield call(labourLookingForApi);\n    yield put(labourLookingForSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* fetchLabourNameSaga(action) {\n  try {\n    const { data } = yield call(labourNameApi);\n    yield put(fetchLabourNameSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* deleteLabourSaga(action) {\n  try {\n    yield call(deleteLabourApi);\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* fetchEditableLabourSaga(action) {\n  try {\n    const { data } = yield call(editableLabourApi);\n    yield put(fetchEditableLabourSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* updatePhoneContactSaga(action) {\n  try {\n    const { data } = yield call(updateLabourContactDetailsApi, action.body);\n    yield put(fetchEditableLabour());\n    yield put(fetchLabourName());\n    yield put(setAlert(data.message, \"success\", { id: uuidv4() }));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* fetchAvailableJobStatSaga(action) {\n  try {\n    const { data } = yield call(jobsAvailableStatsApi);\n    yield put(fetchJobAvailableStatSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield all(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* labourSaga() {\n  yield takeLatest(ADD_LABOUR_REQUIREMENT, addLabourRequirementSaga);\n  yield takeLatest(FETCH_ACTIVE_LABOURS, fetchActiveLabourSaga);\n  yield takeLatest(FETCH_LABOUR_SELECTION, fetchLabourSelectionSaga);\n\n  yield takeLatest(ADD_LABOUR, addLabourSaga);\n  yield takeLatest(COMPANY_SELECTION, companySelectionSaga);\n  yield takeLatest(FETCH_ACTIVE_JOB_STATS, fetchActiveJobStatSaga);\n  yield takeLatest(LABOUR_LOOKING_FOR, labourLookingForSaga);\n  yield takeLatest(FETCH_LABOUR_NAME, fetchLabourNameSaga);\n  yield takeLatest(FETCH_JOB_AVAILABLE_STATS, fetchAvailableJobStatSaga);\n  yield takeLatest(DELETE_LABOUR, deleteLabourSaga);\n  yield takeLatest(FETCH_EDITABLE_LABOUR, fetchEditableLabourSaga);\n  yield takeLatest(UPDATE_LABOUR_PHONE_CONTACT, updatePhoneContactSaga);\n}\n\nexport default labourSaga;\n","import {\n  ADD_LABOUR_REQUIREMENT,\n  ADD_LABOUR_REQUIREMENT_SUCCESS,\n  FETCH_ACTIVE_LABOURS,\n  FETCH_ACTIVE_LABOURS_SUCCESS,\n  FETCH_LABOUR_SELECTION,\n  FETCH_LABOUR_SELECTION_SUCCESS,\n  COMPANY_SELECTION,\n  ADD_LABOUR,\n  ADD_LABOUR_SUCCESS,\n  COMPANY_SELECTION_SUCCESS,\n  FETCH_ACTIVE_JOB_STATS,\n  FETCH_ACTIVE_JOB_STATS_SUCCESS,\n  LABOUR_LOOKING_FOR,\n  LABOUR_LOOKING_FOR_SUCCESS,\n  FETCH_LABOUR_NAME,\n  FETCH_LABOUR_NAME_SUCCESS,\n  FETCH_JOB_AVAILABLE_STATS,\n  FETCH_JOB_AVAILABLE_STATS_SUCCESS,\n  DELETE_LABOUR,\n  DELETE_LABOUR_SUCCESS,\n  FETCH_EDITABLE_LABOUR,\n  FETCH_EDITABLE_LABOUR_SUCCESS,\n  UPDATE_LABOUR_PHONE_CONTACT,\n  UPDATE_LABOUR_PHONE_CONTACT_SUCCESS,\n  CLEAR_ALL,\n} from \"./constants\";\n\nexport const addLabourRequirements = ({\n  stateName,\n  cityName,\n  relocationCost,\n  minimumDurationOfWork,\n  maximumWagePerHour,\n  labourRequired,\n  skillsNeeded,\n}) => {\n  return {\n    type: ADD_LABOUR_REQUIREMENT,\n    body: {\n      stateName,\n      cityName,\n      relocationCost,\n      minimumDurationOfWork,\n      maximumWagePerHour,\n      labourRequired,\n      skillsNeeded,\n    },\n  };\n};\n\nexport const addLabourRequirementsSuccess = (payload) => ({\n  type: ADD_LABOUR_REQUIREMENT_SUCCESS,\n  payload,\n});\n\nexport const activeLabours = () => ({\n  type: FETCH_ACTIVE_LABOURS,\n});\n\nexport const activeLabourSuccess = (payload) => ({\n  type: FETCH_ACTIVE_LABOURS_SUCCESS,\n  payload,\n});\n\nexport const fetchLabourSelection = () => ({\n  type: FETCH_LABOUR_SELECTION,\n});\n\nexport const fetchLabourSelectionSucces = (payload) => ({\n  type: FETCH_LABOUR_SELECTION_SUCCESS,\n  payload,\n});\n\nexport const addLabour = (body) => ({\n  type: ADD_LABOUR,\n  body,\n});\n\nexport const addLabourSuccess = (payload) => ({\n  type: ADD_LABOUR_SUCCESS,\n  payload,\n});\n\nexport const companySelection = () => ({\n  type: COMPANY_SELECTION,\n});\n\nexport const companySelectionSuccess = (payload) => ({\n  type: COMPANY_SELECTION_SUCCESS,\n  payload,\n});\n\nexport const fetchActiveJobStat = () => ({\n  type: FETCH_ACTIVE_JOB_STATS,\n});\n\nexport const fetchActiveJobStatSuccess = (payload) => ({\n  type: FETCH_ACTIVE_JOB_STATS_SUCCESS,\n  payload,\n});\n\nexport const labourLookingFor = () => ({\n  type: LABOUR_LOOKING_FOR,\n});\n\nexport const labourLookingForSuccess = (payload) => ({\n  type: LABOUR_LOOKING_FOR_SUCCESS,\n  payload,\n});\n\nexport const fetchLabourName = () => ({\n  type: FETCH_LABOUR_NAME,\n});\n\nexport const fetchLabourNameSuccess = (payload) => ({\n  type: FETCH_LABOUR_NAME_SUCCESS,\n  payload,\n});\n\nexport const fetchJobAvailableStats = () => ({\n  type: FETCH_JOB_AVAILABLE_STATS,\n});\n\nexport const fetchJobAvailableStatSuccess = (payload) => ({\n  type: FETCH_JOB_AVAILABLE_STATS_SUCCESS,\n  payload,\n});\n\nexport const deleteLabour = () => ({\n  type: DELETE_LABOUR,\n});\n\nexport const deleteLabourSuccess = (payload) => ({\n  type: DELETE_LABOUR_SUCCESS,\n  payload,\n});\n\nexport const fetchEditableLabour = () => ({\n  type: FETCH_EDITABLE_LABOUR,\n});\n\nexport const fetchEditableLabourSuccess = (payload) => ({\n  type: FETCH_EDITABLE_LABOUR_SUCCESS,\n  payload,\n});\n\nexport const updateLabourContact = (body) => ({\n  type: UPDATE_LABOUR_PHONE_CONTACT,\n  body,\n});\n\nexport const updateLabourContactSuccess = (payload) => ({\n  type: UPDATE_LABOUR_PHONE_CONTACT_SUCCESS,\n  payload,\n});\n\nexport const labourClearAll = () => ({\n  type: CLEAR_ALL,\n});\n","import {\n  REGISTER_COORDINATOR,\n  ADD_LABOUR_BY_COORDINATOR,\n  ADD_LABOUR_BY_COORDINATOR_SUCCESS,\n  COORDINATOR_COMPANY_SELECTION,\n  COORDINATOR_COMPANY_SELECTION_SUCCESS,\n  COORDINATOR_LABOUR_LOOKING_FOR,\n  COORDINATOR_LABOUR_LOOKING_FOR_SUCCESS,\n  COORDINATOR_LABOUR_NAME,\n  COORDINATOR_LABOUR_NAME_SUCCESS,\n  COORDINATOR_JOB_AVAILABLE_STATS,\n  COORDINATOR_JOB_AVAILABLE_STATS_SUCCESS,\n  DELETE_COORDINATOR,\n  COORDINATOR_EDIT_DETAILS,\n  COORDINATOR_EDIT_DETAILS_SUCCESS,\n  COORDINATOR_UPDATE_DETAILS,\n  CLEAR_ALL,\n} from \"../actions/constants\";\n\nexport const registerCoordinator = (body) => ({\n  type: REGISTER_COORDINATOR,\n  body,\n});\nexport const addLabourCoordinator = (body) => ({\n  type: ADD_LABOUR_BY_COORDINATOR,\n  body,\n});\n\nexport const addLabourCoordinatorSuccess = (payload) => ({\n  type: ADD_LABOUR_BY_COORDINATOR_SUCCESS,\n  payload,\n});\n\nexport const coordinatorCompanySelection = () => ({\n  type: COORDINATOR_COMPANY_SELECTION,\n});\n\nexport const coordinatorCompanySelectionSuccess = (payload) => ({\n  type: COORDINATOR_COMPANY_SELECTION_SUCCESS,\n  payload,\n});\n\nexport const coordinatorLookingFor = () => ({\n  type: COORDINATOR_LABOUR_LOOKING_FOR,\n});\n\nexport const coordinatorLabourLookingForSuccess = (payload) => ({\n  type: COORDINATOR_LABOUR_LOOKING_FOR_SUCCESS,\n  payload,\n});\n\nexport const coordinatorLabourName = () => ({\n  type: COORDINATOR_LABOUR_NAME,\n});\n\nexport const coordinatorLabourNameSuccess = (payload) => ({\n  type: COORDINATOR_LABOUR_NAME_SUCCESS,\n  payload,\n});\n\nexport const coordinatorJobAvailableStat = () => ({\n  type: COORDINATOR_JOB_AVAILABLE_STATS,\n});\n\nexport const coordinatorJobAvailableStatSuccess = (payload) => ({\n  type: COORDINATOR_JOB_AVAILABLE_STATS_SUCCESS,\n  payload,\n});\n\nexport const deleteCoordinator = () => ({\n  type: DELETE_COORDINATOR,\n});\n\nexport const coordinatorEditDetails = () => ({\n  type: COORDINATOR_EDIT_DETAILS,\n});\n\nexport const coordinatorEditDetailsSuccess = (payload) => ({\n  type: COORDINATOR_EDIT_DETAILS_SUCCESS,\n  payload,\n});\n\nexport const coordinatorUpdateDetails = (body) => ({\n  type: COORDINATOR_UPDATE_DETAILS,\n  body,\n});\n\nexport const clearAllCoordinator = () => ({\n  type: CLEAR_ALL,\n});\n","import axios from \"axios\";\n\nexport const fetchCoordinatorNameApi = () => {\n  return axios.get(\"/api/coordinator/getName\");\n};\n\nexport const fetchCoordinatorJobAvailableApi = () => {\n  return axios.get(\"/api/coordinator/jobsAvailableStats\");\n};\n\nexport const coordinatorAddLabourApi = (body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"/api/coordinator/addLabour\", body, config);\n};\n\nexport const coordinatorDeleteApi = () => {\n  return axios.delete(\"api/coordinator/deleteAccount\");\n};\n\nexport const coordinatorEditWorkerApi = () => {\n  return axios.get(\"/api/coordinator/workerDetails\");\n};\n\nexport const coordinatorUpdateApi = (body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"/api/coordinator/updateDetails\", body, config);\n};\n\nexport const coordinatorLookingForApi = () => {\n  return axios.get(\"/api/coordinator/lookingForText\");\n};\n\nexport const coordinatorCompanySelectionApi = () => {\n  return axios.get(\"/api/coordinator/companySelection\");\n};\n\nexport const registerCoordinatorApi = (body) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"/api/coordinator/signUp\", body, config);\n};\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  ADD_LABOUR_BY_COORDINATOR,\n  COORDINATOR_COMPANY_SELECTION,\n  COORDINATOR_LABOUR_LOOKING_FOR,\n  COORDINATOR_LABOUR_NAME,\n  COORDINATOR_JOB_AVAILABLE_STATS,\n  DELETE_COORDINATOR,\n  COORDINATOR_EDIT_DETAILS,\n  COORDINATOR_UPDATE_DETAILS,\n  REGISTER_COORDINATOR,\n} from \"../actions/constants\";\n\nimport {\n  addLabourCoordinatorSuccess,\n  coordinatorCompanySelectionSuccess,\n  coordinatorLabourLookingForSuccess,\n  coordinatorLabourNameSuccess,\n  coordinatorJobAvailableStatSuccess,\n  coordinatorEditDetails,\n  coordinatorLabourName,\n  coordinatorEditDetailsSuccess,\n} from \"../actions/coordinatorActions\";\n\nimport {\n  fetchCoordinatorNameApi,\n  fetchCoordinatorJobAvailableApi,\n  coordinatorAddLabourApi,\n  coordinatorDeleteApi,\n  coordinatorEditWorkerApi,\n  coordinatorUpdateApi,\n  coordinatorLookingForApi,\n  coordinatorCompanySelectionApi,\n  registerCoordinatorApi,\n} from \"../api/coordinatorApi\";\n\nimport { setAlert } from \"../actions/alertActions\";\n\nfunction* addLabourCoordinatorSaga(action) {\n  try {\n    const { data } = yield call(coordinatorAddLabourApi, action.body);\n    yield put(setAlert(data.message, \"success\", { id: uuidv4() }));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield call(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* registerCoordinatorSaga(action) {\n  try {\n    const { data } = yield call(registerCoordinatorApi, action.body);\n    yield put(setAlert(data.message, \"success\", { id: uuidv4() }));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield call(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* coordinatorCompanySelSaga(action) {\n  try {\n    const { data } = yield call(coordinatorCompanySelectionApi);\n    yield put(coordinatorCompanySelectionSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield call(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* coordinatorLabourLookingSaga(action) {\n  try {\n    const { data } = yield call(coordinatorLookingForApi);\n    yield put(coordinatorLabourLookingForSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield call(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* coordinatorLabourNameSaga(action) {\n  try {\n    const { data } = yield call(fetchCoordinatorNameApi);\n    yield put(coordinatorLabourNameSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield call(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* coordinatorAvailabeStatSaga(action) {\n  try {\n    const { data } = yield call(fetchCoordinatorJobAvailableApi);\n    yield put(coordinatorJobAvailableStatSuccess(data));\n    yield put(coordinatorLabourNameSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield call(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* deleteCoordinatorSaga(action) {\n  try {\n    yield call(coordinatorDeleteApi);\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield call(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* editCoordinatorSaga(action) {\n  try {\n    const { data } = yield call(coordinatorEditWorkerApi);\n    yield put(coordinatorEditDetailsSuccess(data));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield call(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* coordinatorUpdateSaga(action) {\n  try {\n    const { data } = yield call(coordinatorUpdateApi, action.body);\n    yield put(coordinatorEditDetails());\n    yield put(coordinatorLabourName());\n    yield put(setAlert(data.message, \"success\", { id: uuidv4() }));\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      yield call(\n        errors.map((error) =>\n          put(setAlert(error.msg, \"error\", { id: uuidv4() }))\n        )\n      );\n    }\n  }\n}\n\nfunction* coordinatorSaga() {\n  yield takeLatest(ADD_LABOUR_BY_COORDINATOR, addLabourCoordinatorSaga);\n  yield takeLatest(REGISTER_COORDINATOR, registerCoordinatorSaga);\n  yield takeLatest(COORDINATOR_COMPANY_SELECTION, coordinatorCompanySelSaga);\n  yield takeLatest(\n    COORDINATOR_LABOUR_LOOKING_FOR,\n    coordinatorLabourLookingSaga\n  );\n  yield takeLatest(COORDINATOR_LABOUR_NAME, coordinatorLabourNameSaga);\n  yield takeLatest(\n    COORDINATOR_JOB_AVAILABLE_STATS,\n    coordinatorAvailabeStatSaga\n  );\n  yield takeLatest(DELETE_COORDINATOR, deleteCoordinatorSaga);\n  yield takeLatest(COORDINATOR_EDIT_DETAILS, editCoordinatorSaga);\n  yield takeLatest(COORDINATOR_UPDATE_DETAILS, coordinatorUpdateSaga);\n}\n\nexport default coordinatorSaga;\n","import authSagas from \"./authSagas\";\nimport companySagas from \"./companySagas\";\nimport labourSaga from \"./labourSaga\";\nimport coordinatorSaga from \"./coordinatorSaga\";\n\nimport { all } from \"redux-saga/effects\";\n\nfunction* rootSaga() {\n  yield all([authSagas(), companySagas(), labourSaga(), coordinatorSaga()]);\n}\n\nexport default rootSaga;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED_SUCCESS,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/constants\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: false,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case USER_LOADED_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        token: payload.token,\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/constants\";\n\nconst initialState = [];\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_COMPANY,\n  ADD_COMPANY_SUCCESS,\n  GET_COMPANY_NAME,\n  GET_COMPANY_NAME_SUCCESS,\n  LOOKING_FOR_TEXT_SUCCESS,\n  COMPANY_REQUESTS,\n  COMPANY_REQUESTS_SUCCESS,\n  FETCH_ADD_LOCATION_SUCCESS,\n  FETCH_EDITABLE_NAMES_SUCCESS,\n  FETCH_LABOUR_SUPPLY_SUCCESS,\n  FETCH_LABOUR_DEMAND_SUCCESS,\n  FETCH_AVERAGE_WAGE_SUCCESS,\n  FETCH_AVERAGE_WORK_TIME_SUCCESS,\n  CLEAR_ALL,\n} from \"../actions/constants\";\n\nconst initialState = {\n  companyName: \"\",\n  contactPersonName: \"\",\n  state: \"\",\n  city: \"\",\n  loading: false,\n  lookingFor: { isLoading: false },\n  activeLabours: {},\n  companyRequestResult: {},\n  addLocationResult: {},\n  editableNamesResult: {},\n  labourSupplyStats: {},\n  labourDemandStats: {},\n  avgWageResult: {},\n  avgWorkTimeResult: {},\n};\n\nconst companyReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_COMPANY:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ADD_COMPANY_SUCCESS: {\n      return {\n        loading: false,\n        ...action.payload,\n      };\n    }\n    case GET_COMPANY_NAME:\n      return {\n        ...state,\n      };\n    case GET_COMPANY_NAME_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        companyName: action.payload.companyName,\n      };\n    case LOOKING_FOR_TEXT_SUCCESS: {\n      return {\n        ...state,\n        lookingForResult: action.payload.result,\n      };\n    }\n    case COMPANY_REQUESTS:\n      return {\n        ...state,\n        loading: true,\n      };\n    case COMPANY_REQUESTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        companyRequestResult: action.payload,\n      };\n    case FETCH_ADD_LOCATION_SUCCESS:\n      return {\n        ...state,\n        addLocationResult: action.payload,\n      };\n    case FETCH_EDITABLE_NAMES_SUCCESS: {\n      return {\n        ...state,\n        editableNamesResult: action.payload,\n      };\n    }\n    case FETCH_LABOUR_SUPPLY_SUCCESS:\n      return {\n        ...state,\n        labourSupplyStats: action.payload,\n      };\n    case FETCH_LABOUR_DEMAND_SUCCESS:\n      return {\n        ...state,\n        labourDemandStats: action.payload,\n      };\n    case FETCH_AVERAGE_WAGE_SUCCESS:\n      return {\n        ...state,\n        avgWageResult: action.payload,\n      };\n    case FETCH_AVERAGE_WORK_TIME_SUCCESS:\n      return {\n        ...state,\n        avgWorkTimeResult: action.payload,\n      };\n    case CLEAR_ALL:\n      return {\n        ...state,\n        companyName: \"\",\n      };\n    default:\n      return state;\n  }\n};\n\nexport default companyReducer;\n","import {\n  ADD_LABOUR_REQUIREMENT,\n  ADD_LABOUR_REQUIREMENT_SUCCESS,\n  FETCH_ACTIVE_LABOURS,\n  FETCH_ACTIVE_LABOURS_SUCCESS,\n  FETCH_LABOUR_SELECTION,\n  FETCH_LABOUR_SELECTION_SUCCESS,\n  ADD_LABOUR,\n  COMPANY_SELECTION,\n  ADD_LABOUR_SUCCESS,\n  COMPANY_SELECTION_SUCCESS,\n  FETCH_ACTIVE_JOB_STATS,\n  FETCH_ACTIVE_JOB_STATS_SUCCESS,\n  LABOUR_LOOKING_FOR,\n  LABOUR_LOOKING_FOR_SUCCESS,\n  FETCH_LABOUR_NAME,\n  FETCH_LABOUR_NAME_SUCCESS,\n  FETCH_JOB_AVAILABLE_STATS,\n  FETCH_JOB_AVAILABLE_STATS_SUCCESS,\n  DELETE_LABOUR,\n  DELETE_LABOUR_SUCCESS,\n  FETCH_EDITABLE_LABOUR,\n  FETCH_EDITABLE_LABOUR_SUCCESS,\n  CLEAR_ALL,\n} from \"../actions/constants\";\n\nconst initialState = {\n  stateName: \"\",\n  cityName: \"\",\n  relocationCost: \"\",\n  minimumDurationOfWork: \"\",\n  maximumWagePerHour: \"\",\n  labourRequired: \"\",\n  skillsNeeded: \"\",\n  activeLabourLoading: false,\n  activeLaboursResults: {},\n  loading: false,\n  labourSelectionLoading: false,\n  labourSelection: {},\n  labourName: \"\",\n  companySelectionResult: {},\n  activeJobStatResult: {},\n  labourLookingForResult: {},\n  jobAvailableStat: {},\n  editableLabourDetails: {},\n};\n\nconst labourRequirementReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_LABOUR_REQUIREMENT:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ADD_LABOUR_REQUIREMENT_SUCCESS: {\n      return {\n        loading: false,\n\n        ...action.payload,\n      };\n    }\n    case FETCH_ACTIVE_LABOURS: {\n      return {\n        ...state,\n        activeLabourLoading: true,\n      };\n    }\n    case FETCH_ACTIVE_LABOURS_SUCCESS: {\n      return {\n        ...state,\n        activeLabourLoading: false,\n        activeLaboursResults: action.payload,\n      };\n    }\n    case FETCH_LABOUR_SELECTION: {\n      return {\n        ...state,\n        labourSelectionLoading: true,\n      };\n    }\n    case FETCH_LABOUR_SELECTION_SUCCESS: {\n      return {\n        ...state,\n        labourSelectionLoading: false,\n        labourSelection: action.payload,\n      };\n    }\n    case FETCH_LABOUR_NAME_SUCCESS:\n      return {\n        ...state,\n        labourName: action.payload,\n      };\n    case COMPANY_SELECTION_SUCCESS:\n      return {\n        ...state,\n        companySelectionResult: action.payload,\n      };\n    case FETCH_ACTIVE_JOB_STATS_SUCCESS:\n      return {\n        ...state,\n        activeJobStatResult: action.payload,\n      };\n    case LABOUR_LOOKING_FOR_SUCCESS:\n      return {\n        ...state,\n        labourLookingForResult: action.payload.result,\n      };\n    case FETCH_EDITABLE_LABOUR_SUCCESS:\n      return {\n        ...state,\n        editableLabourDetails: action.payload,\n      };\n    case FETCH_JOB_AVAILABLE_STATS_SUCCESS:\n      return {\n        ...state,\n        jobAvailableStat: action.payload,\n      };\n    case CLEAR_ALL: {\n      return {\n        ...state,\n        labourName: \"\",\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default labourRequirementReducer;\n","import {\n  ADD_LABOUR_BY_COORDINATOR,\n  ADD_LABOUR_BY_COORDINATOR_SUCCESS,\n  COORDINATOR_COMPANY_SELECTION,\n  COORDINATOR_COMPANY_SELECTION_SUCCESS,\n  COORDINATOR_ACTIVE_JOB_STAT,\n  COORDINATOR_ACTIVE_JOB_STAT_SUCCESS,\n  COORDINATOR_LABOUR_LOOKING_FOR,\n  COORDINATOR_LABOUR_LOOKING_FOR_SUCCESS,\n  COORDINATOR_LABOUR_NAME,\n  COORDINATOR_LABOUR_NAME_SUCCESS,\n  COORDINATOR_JOB_AVAILABLE_STATS,\n  COORDINATOR_JOB_AVAILABLE_STATS_SUCCESS,\n  DELETE_COORDINATOR,\n  COORDINATOR_EDIT_DETAILS,\n  COORDINATOR_EDIT_DETAILS_SUCCESS,\n  COORDINATOR_UPDATE_DETAILS,\n  COORDINATOR_UPDATE_DETAILS_SUCCESS,\n  CLEAR_ALL,\n} from \"../actions/constants\";\n\nconst initialState = {\n  stateName: \"\",\n  cityName: \"\",\n  relocationCost: \"\",\n  minimumDurationOfWork: \"\",\n  maximumWagePerHour: \"\",\n  labourRequired: \"\",\n  skillsNeeded: \"\",\n  loading: false,\n  labourSelectionLoading: false,\n  labourSelection: {},\n  labourName: \"\",\n  companySelectionResult: {},\n  activeJobStatResult: {},\n  labourLookingForResult: {},\n  jobAvailableStat: {},\n  editableLabourDetails: {},\n};\n\nconst coordinatorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_LABOUR_BY_COORDINATOR:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ADD_LABOUR_BY_COORDINATOR_SUCCESS: {\n      return {\n        loading: false,\n\n        ...action.payload,\n      };\n    }\n    case COORDINATOR_LABOUR_NAME_SUCCESS:\n      return {\n        ...state,\n        labourName: action.payload,\n      };\n    case COORDINATOR_COMPANY_SELECTION:\n      return {\n        ...state,\n        labourSelectionLoading: true,\n      };\n    case COORDINATOR_COMPANY_SELECTION_SUCCESS:\n      return {\n        ...state,\n        labourSelectionLoading: false,\n        companySelectionResult: action.payload,\n      };\n    case COORDINATOR_LABOUR_LOOKING_FOR_SUCCESS:\n      return {\n        ...state,\n        labourLookingForResult: action.payload.result,\n      };\n    case COORDINATOR_EDIT_DETAILS_SUCCESS:\n      return {\n        ...state,\n        editableLabourDetails: action.payload,\n      };\n    case COORDINATOR_JOB_AVAILABLE_STATS_SUCCESS:\n      return {\n        ...state,\n        jobAvailableStat: action.payload,\n      };\n    case CLEAR_ALL: {\n      return {\n        ...state,\n        labourName: \"\",\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default coordinatorReducer;\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport alertReducer from \"./alertReducer\";\nimport companyReducer from \"./companyReducer\";\nimport labourReducer from \"./labourReducer\";\nimport coordinatorReducer from \"./coordinatorReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  alerts: alertReducer,\n  company: companyReducer,\n  labour: labourReducer,\n  coordinator: coordinatorReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers\";\nimport {\n  setLocalStorageMiddleware,\n  removeLocalStorageMiddleware,\n  removeAlertMiddleware,\n} from \"./middlewares\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [\n  sagaMiddleware,\n  setLocalStorageMiddleware,\n  removeAlertMiddleware,\n  removeLocalStorageMiddleware,\n];\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\nsagaMiddleware.run(rootSaga);\nexport default store;\n","import { removeAlert } from \"../actions/alertActions\";\nexport const setLocalStorageMiddleware = (store) => (next) => (action) => {\n  if (action.type === \"REGISTER_SUCCESS\" || action.type === \"LOGIN_SUCCESS\") {\n    localStorage.setItem(\"token\", action.payload.token);\n  }\n  next(action);\n};\n\nexport const removeLocalStorageMiddleware = (store) => (next) => (action) => {\n  if (action.type === \"LOGOUT\") {\n    localStorage.removeItem(\"token\");\n  }\n  next(action);\n};\n\nexport const removeAlertMiddleware = (store) => (next) => (action) => {\n  if (action.type === \"SET_ALERT\") {\n    setTimeout(() => {\n      store.dispatch(removeAlert(action.payload.id));\n    }, 2000);\n  }\n  next(action);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../actions/authActions\";\nimport { clearAll } from \"../actions/companyActions\";\nimport { labourClearAll } from \"../actions/labourActions\";\nimport { Menu } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction Nav({ location }) {\n  const { t } = useTranslation();\n  const [current, setCurrent] = useState(\"language\");\n  const dispatch = useDispatch();\n  const { isAuthenticated } = useSelector((state) => state.auth);\n  return (\n    <Menu\n      mode=\"horizontal\"\n      selectedKeys={current}\n      style={{ position: \"fixed\", zIndex: \"999\", width: \"100%\", top: \"0\" }}\n      onClick={(e) => setCurrent(e.key)}\n    >\n      <Menu.Item key=\"language\">\n        <Link to=\"/\"> {t(\"Home\", \"Home\")} </Link>\n      </Menu.Item>\n      {isAuthenticated ? (\n        <Menu.Item key=\"logout\" style={{ float: \"right\" }}>\n          <Link\n            to=\"/login\"\n            onClick={() => {\n              dispatch(logout());\n              dispatch(clearAll());\n              dispatch(labourClearAll());\n            }}\n          >\n             {t(\"Logout\", \"Logout\")}\n          </Link>\n        </Menu.Item>\n      ) : null}\n\n      <Menu.Item key=\"about\" style={{ float: \"right\" }}>\n        <Link to=\"/\">{t(\"AboutUs\", \"About Us\")}</Link>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default withRouter(Nav);\n","import React, { Fragment } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nfunction LanguageSelection() {\n  const { t, i18n } = useTranslation();\n  const changeLanguage = (lang) => i18n.changeLanguage(lang);\n  return (\n    <Fragment>\n      <div className=\"language-container\">\n        <h1>Please click on your prefered language</h1>\n        <div className=\"buttons\">\n          <Link to=\"/entity\">\n            <Button\n              style={{\n                marginRight: \"50px\",\n                height: \"auto\",\n                fontSize: \"1.5rem\",\n                padding: \"5px 40px\",\n                backgroundColor: \"#5854FF\",\n                borderRadius: \"10px\",\n              }}\n              type=\"primary\"\n              size=\"large\"\n            >\n              English\n            </Button>\n          </Link>\n          <Link to=\"/entity\">\n          <Button\n            style={{\n              height: \"auto\",\n              backgroundColor: \"#5854FF\",\n              padding: \"5px 40px\",\n              fontSize: \"1.5rem\",\n              borderRadius: \"10px\",\n            }}\n            type=\"primary\"\n            size=\"large\"\n            onClick={() => changeLanguage(\"hi\")}\n          >\n            हिन्दी\n          </Button>\n          </Link>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default LanguageSelection;\n","import React from \"react\";\nimport { Alert } from \"antd\";\n\nconst ShowAlert = (alert) => (\n  <Alert\n    type={alert.alertType}\n    message={alert.msg}\n    key={alert.id}\n    showIcon\n    style={{\n      position: \"absolute\",\n      top: \"50\",\n      zIndex: \"12000\",\n      width: \"100%\",\n    }}\n  ></Alert>\n);\n\nexport default ShowAlert;\n","import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Button, Card, Form, Input, Select } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from \"../actions/authActions\";\nimport { Icon } from \"@ant-design/compatible\";\nimport { useTranslation } from \"react-i18next\";\nimport ShowAlert from \"./ShowAlert\";\n\nfunction RegisterForm() {\n  const { t } = useTranslation();\n  const { Option } = Select;\n  const [entity, setEntity] = useState(undefined);\n  const dispatch = useDispatch();\n  const { isAuthenticated } = useSelector((state) => state.auth);\n  const alerts = useSelector((state) => state.alerts);\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/check-entity\" />;\n  }\n  return (\n    <Fragment>\n      {alerts && alerts.length > 0 && alerts.map((alert) => ShowAlert(alert))}\n      <div\n        className=\"form-container\"\n        style={{\n          boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n          borderRadius: \"20px\",\n        }}\n      >\n        <Card title= {t(\"Register\", \"Register\")}  style={{ borderRadius: \"20px\" }}>\n          <Form\n            initialValues={{ number: \"\", password: \"\", entity }}\n            onFinish={(values) => {\n              dispatch(register(values));\n            }}\n          >\n            <Form.Item\n              name=\"phoneNumber\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter a number!\",\n                },\n              ]}\n            >\n              <Input\n                style={{ borderRadius: \"25px\" }}\n                type=\"number\"\n                prefix={\n                  <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder= {t(\"PhoneNumber\", \"Phone Number\")}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter a password!\",\n                },\n              ]}\n            >\n              <Input.Password\n                style={{ borderRadius: \"25px\" }}\n                prefix={\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder={t(\"Password\", \"Password\" )}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"type\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter entity type!\",\n                },\n              ]}\n            >\n              <Select\n                placeholder= {t(\"entitySelection\", \"Select Entity\" )}\n                onChange={(val) => setEntity(val)}\n                value={entity}\n              >\n                <Option value=\"Company\"> {t(\"company\", \"Company\" )}</Option>\n                <Option value=\"Labourer\">{t(\"worker\", \"Labourer\" )}</Option>\n                <Option value=\"Coordinator\">{t(\"Coordinator\", \"Coordinator\" )}</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item>\n              <Button\n                style={{\n                  height: \"auto\",\n                  backgroundColor: \"#5854FF\",\n                  borderRadius: \"24px\",\n                }}\n                type=\"primary\"\n                size=\"large\"\n                htmlType=\"submit\"\n              >\n                {t(\"Register\", \"Register\" )}\n              </Button>{\" \"}\n                {t(\"Or\", \"Or\" )} <Link to=\"/login\"> {t(\"LoginNow\", \"Already have an account Login now!\" )} </Link>\n            </Form.Item>\n          </Form>\n        </Card>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default RegisterForm;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport { Redirect } from \"react-router-dom\";\nfunction CheckEntity() {\n  const { user } = useSelector((state) => state.auth);\n  if (!isEmpty(user) && user.type === \"Company\") {\n    return <Redirect to=\"/company-info\" />;\n  } else if (!isEmpty(user) && user.type === \"Labourer\") {\n    return <Redirect to=\"/labour-info\" />;\n  } else if (!isEmpty(user) && user.type === \"Coordinator\") {\n    return <Redirect to=\"/coordinator-register\" />;\n  }\n  return null;\n}\n\nexport default CheckEntity;\n","export const StateRegionData = [\n  [\"Andaman & Nicobar\",\n  \"AN\",\n  \"Alipur | Andaman Island | Anderson Island | Arainj-Laka-Punga | Austinabad | Bamboo Flat | Barren Island | Beadonabad | Betapur | Bindraban | Bonington | Brookesabad | Cadell Point | Calicut | Chetamale | Cinque Islands | Defence Island | Digilpur | Dolyganj | Flat Island | Geinyale | Great Coco Island | Haddo | Havelock Island | Henry Lawrence Island | Herbertabad | Hobdaypur | Ilichar | Ingoie | Inteview Island | Jangli Ghat | Jhon Lawrence Island | Karen | Kartara | KYD Islannd | Landfall Island | Little Andmand | Little Coco Island | Long Island | Maimyo | Malappuram | Manglutan | Manpur | Mitha Khari | Neill Island | Nicobar Island | North Brother Island | North Passage Island | North Sentinel Island | Nothen Reef Island | Outram Island | Pahlagaon | Palalankwe | Passage Island | Phaiapong | Phoenix Island | Port Blair | Preparis Island | Protheroepur | Rangachang | Rongat | Rutland Island | Sabari | Saddle Peak | Shadipur | Smith Island | Sound Island | South Sentinel Island | Spike Island | Tarmugli Island | Taylerabad | Titaije | Toibalawe | Tusonabad | West Island | Wimberleyganj | Yadita\",\n  ],\n  [\n      \"Andhra Pradesh\",\n  \"AD\",\n  \" Achampet | Adilabad | Adoni | Alampur | Allagadda | Alur | Amalapuram | Amangallu | Anakapalle | Anantapur | Andole | Araku | Armoor | Asifabad | Aswaraopet | Atmakur | B. Kothakota | Badvel | Banaganapalle | Bandar | Bangarupalem | Banswada | Bapatla | Bellampalli | Bhadrachalam | Bhainsa | Bheemunipatnam | Bhimadole | Bhimavaram | Bhongir | Bhooragamphad | Boath | Bobbili | Bodhan | Chandoor | Chavitidibbalu | Chejerla | Chepurupalli | Cherial | Chevella | Chinnor | Chintalapudi | Chintapalle | Chirala | Chittoor | Chodavaram | Cuddapah | Cumbum | Darsi | Devarakonda | Dharmavaram | Dichpalli | Divi | Donakonda | Dronachalam | East Godavari | Eluru | Eturnagaram | Gadwal | Gajapathinagaram | Gajwel | Garladinne | Giddalur | Godavari | Gooty | Gudivada | Gudur | Guntur | Hindupur | Hunsabad | Huzurabad | Huzurnagar | Hyderabad | Ibrahimpatnam | Jaggayyapet | Jagtial | Jammalamadugu | Jangaon | Jangareddygudem | Jannaram | Kadiri | Kaikaluru | Kakinada | Kalwakurthy | Kalyandurg | Kamalapuram | Kamareddy | Kambadur | Kanaganapalle | Kandukuru | Kanigiri | Karimnagar | Kavali | Khammam | Khanapur (AP) | Kodangal | Koduru | Koilkuntla | Kollapur | Kothagudem | Kovvur | Krishna | Krosuru | Kuppam | Kurnool | Lakkireddipalli | Madakasira | Madanapalli | Madhira | Madnur | Mahabubabad | Mahabubnagar | Mahadevapur | Makthal | Mancherial | Mandapeta | Mangalagiri | Manthani | Markapur | Marturu | Medachal | Medak | Medarmetla | Metpalli | Mriyalguda | Mulug | Mylavaram | Nagarkurnool | Nalgonda | Nallacheruvu | Nampalle | Nandigama | Nandikotkur | Nandyal | Narasampet | Narasaraopet | Narayanakhed | Narayanpet | Narsapur | Narsipatnam | Nazvidu | Nelloe | Nellore | Nidamanur | Nirmal | Nizamabad | Nuguru | Ongole | Outsarangapalle | Paderu | Pakala | Palakonda | Paland | Palmaneru | Pamuru | Pargi | Parkal | Parvathipuram | Pathapatnam | Pattikonda | Peapalle | Peddapalli | Peddapuram | Penukonda | Piduguralla | Piler | Pithapuram | Podili | Polavaram | Prakasam | Proddatur | Pulivendla | Punganur | Putturu | Rajahmundri | Rajampeta | Ramachandrapuram | Ramannapet | Rampachodavaram | Rangareddy | Rapur | Rayachoti | Rayadurg | Razole | Repalle | Saluru | Sangareddy | Sathupalli | Sattenapalle | Satyavedu | Shadnagar | Siddavattam | Siddipet | Sileru | Sircilla | Sirpur Kagaznagar | Sodam | Sompeta | Srikakulam | Srikalahasthi | Srisailam | Srungavarapukota | Sudhimalla | Sullarpet | Tadepalligudem | Tadipatri | Tanduru | Tanuku | Tekkali | Tenali | Thungaturthy | Tirivuru | Tirupathi | Tuni | Udaygiri | Ulvapadu | Uravakonda | Utnor | V.R. Puram | Vaimpalli | Vayalpad | Venkatgiri | Venkatgirikota | Vijayawada | Vikrabad | Vinjamuru | Vinukonda | Visakhapatnam | Vizayanagaram | Vizianagaram | Vuyyuru | Wanaparthy | Warangal | Wardhannapet | Yelamanchili | Yelavaram | Yeleswaram | Yellandu | Yellanuru | Yellareddy | Yerragondapalem | Zahirabad \",\n  ],\n  \n  [\"Arunachal Pradesh\",\n  \"AP\",\n  \" Along | Anini | Anjaw | Bameng | Basar | Changlang | Chowkhem | Daporizo | Dibang Valley | Dirang | Hayuliang | Huri | Itanagar | Jairampur | Kalaktung | Kameng | Khonsa | Kolaring | Kurung Kumey | Lohit | Lower Dibang Valley | Lower Subansiri | Mariyang | Mechuka | Miao | Nefra | Pakkekesang | Pangin | Papum Pare | Passighat | Roing | Sagalee | Seppa | Siang | Tali | Taliha | Tawang | Tezu | Tirap | Tuting | Upper Siang | Upper Subansiri | Yiang Kiag \", \n  ],\n  [\n      \"Assam\",\n      \"AS\",\n      \" Abhayapuri | Baithalangshu | Barama | Barpeta Road | Bihupuria | Bijni | Bilasipara | Bokajan | Bokakhat | Boko | Bongaigaon | Cachar | Cachar Hills | Darrang | Dhakuakhana | Dhemaji | Dhubri | Dibrugarh | Digboi | Diphu | Goalpara | Gohpur | Golaghat | Guwahati | Hailakandi | Hajo | Halflong | Hojai | Howraghat | Jorhat | Kamrup | Karbi Anglong | Karimganj | Kokarajhar | Kokrajhar | Lakhimpur | Maibong | Majuli | Mangaldoi | Mariani | Marigaon | Moranhat | Morigaon | Nagaon | Nalbari | Rangapara | Sadiya | Sibsagar | Silchar | Sivasagar | Sonitpur | Tarabarihat | Tezpur | Tinsukia | Udalgiri | Udalguri | UdarbondhBarpeta\",\n  ],\n  [\"Bihar\",\n  \"BH\",\n  \" Adhaura | Amarpur | Araria | Areraj | Arrah | Arwal | Aurangabad | Bagaha | Banka | Banmankhi | Barachakia | Barauni | Barh | Barosi | Begusarai | Benipatti | Benipur | Bettiah | Bhabhua | Bhagalpur | Bhojpur | Bidupur | Biharsharif | Bikram | Bikramganj | Birpur | Buxar | Chakai | Champaran | Chapara | Dalsinghsarai | Danapur | Darbhanga | Daudnagar | Dhaka | Dhamdaha | Dumraon | Ekma | Forbesganj | Gaya | Gogri | Gopalganj | H.Kharagpur | Hajipur | Hathua | Hilsa | Imamganj | Jahanabad | Jainagar | Jamshedpur | Jamui | Jehanabad | Jhajha | Jhanjharpur | Kahalgaon | Kaimur (Bhabua) | Katihar | Katoria | Khagaria | Kishanganj | Korha | Lakhisarai | Madhepura | Madhubani | Maharajganj | Mahua | Mairwa | Mallehpur | Masrakh | Mohania | Monghyr | Motihari | Motipur | Munger | Muzaffarpur | Nabinagar | Nalanda | Narkatiaganj | Naugachia | Nawada | Pakribarwan | Pakridayal | Patna | Phulparas | Piro | Pupri | Purena | Purnia | Rafiganj | Rajauli | Ramnagar | Raniganj | Raxaul | Rohtas | Rosera | S.Bakhtiarpur | Saharsa | Samastipur | Saran | Sasaram | Seikhpura | Sheikhpura | Sheohar | Sherghati | Sidhawalia | Singhwara | Sitamarhi | Siwan | Sonepur | Supaul | Thakurganj | Triveniganj | Udakishanganj | Vaishali | Wazirganj\",\n  ],\n  \n  [\"Chandigarh\",\n  \"CD\",\n  \"Chandigarh | Mani Marja\"\n  ],\n  \n  [\n      \"Chhattisgarh\",\n      \"CH\",\n      \" Ambikapur | Antagarh | Arang | Bacheli | Bagbahera | Bagicha | Baikunthpur | Balod | Balodabazar | Balrampur | Barpalli | Basana | Bastanar | Bastar | Bderajpur | Bemetara | Berla | Bhairongarh | Bhanupratappur | Bharathpur | Bhatapara | Bhilai | Bhilaigarh | Bhopalpatnam | Bijapur | Bilaspur | Bodla | Bokaband | Chandipara | Chhinagarh | Chhuriakala | Chingmut | Chuikhadan | Dabhara | Dallirajhara | Dantewada | Deobhog | Dhamda | Dhamtari | Dharamjaigarh | Dongargarh | Durg | Durgakondal | Fingeshwar | Gariaband | Garpa | Gharghoda | Gogunda | Ilamidi | Jagdalpur | Janjgir | Janjgir-Champa | Jarwa | Jashpur | Jashpurnagar | Kabirdham-Kawardha | Kanker | Kasdol | Kathdol | Kathghora | Kawardha | Keskal | Khairgarh | Kondagaon | Konta | Korba | Korea | Kota | Koyelibeda | Kuakunda | Kunkuri | Kurud | Lohadigundah | Lormi | Luckwada | Mahasamund | Makodi | Manendragarh | Manpur | Marwahi | Mohla | Mungeli | Nagri | Narainpur | Narayanpur | Neora | Netanar | Odgi | Padamkot | Pakhanjur | Pali | Pandaria | Pandishankar | Parasgaon | Pasan | Patan | Pathalgaon | Pendra | Pratappur | Premnagar | Raigarh | Raipur | Rajnandgaon | Rajpur | Ramchandrapur | Saraipali | Saranggarh | Sarona | Semaria | Shakti | Sitapur | Sukma | Surajpur | Surguja | Tapkara | Toynar | Udaipur | Uproda | Wadrainagar\",\n  ],\n  \n  [\n      \"Dadra and Nagar Haveli\",\n      \"SN\",\n      \" Amal | Amli | Bedpa | Chikhli | Dadra & Nagar Haveli | Dahikhed | Dolara | Galonda | Kanadi | Karchond | Khadoli | Kharadpada | Kherabari | Kherdi | Kothar | Luari | Mashat | Rakholi | Rudana | Saili | Sili | Silvassa | Sindavni | Udva | Umbarkoi | Vansda | Vasona | Velugam \",\n  ],\n  \n  [\n      \"Daman and Diu\",\n      \"DD\",\n      \" Brancavare | Dagasi | Daman | Diu | Magarvara | Nagwa | Pariali | Passo Covo \",\n  ],\n    [\n      \"Delhi\",\n      \"DH\",\n      \"Central Delhi | East Delhi | New Delhi | North Delhi | North East Delhi | North West Delhi | South Delhi | South West Delhi | West Delhi \",\n  ],\n  \n  [\n      \"Goa\",\n      \"GA\",\n      \" Canacona | Candolim | Chinchinim | Cortalim | Goa | Jua | Madgaon | Mahem | Mapuca | Marmagao | Panji | Ponda | Sanvordem | Terekhol \",\n  ],\n  \n  \n  [\n      \"Gujarat\", \n      \"GJ\",\n      \" Ahmedabad | Ahwa | Amod | Amreli | Anand | Anjar | Ankaleshwar | Babra | Balasinor | Banaskantha | Bansada | Bardoli | Bareja | Baroda | Barwala | Bayad | Bhachav | Bhanvad | Bharuch | Bhavnagar | Bhiloda | Bhuj | Billimora | Borsad | Botad | Chanasma | Chhota Udaipur | Chotila | Dabhoi | Dahod | Damnagar | Dang | Danta | Dasada | Dediapada | Deesa | Dehgam | Deodar | Devgadhbaria | Dhandhuka | Dhanera | Dharampur | Dhari | Dholka | Dhoraji | Dhrangadhra | Dhrol | Dwarka | Fortsongadh | Gadhada | Gandhi Nagar | Gariadhar | Godhra | Gogodar | Gondal | Halol | Halvad | Harij | Himatnagar | Idar | Jambusar | Jamjodhpur | Jamkalyanpur | Jamnagar | Jasdan | Jetpur | Jhagadia | Jhalod | Jodia | Junagadh | Junagarh | Kalawad | Kalol | Kapad Wanj | Keshod | Khambat | Khambhalia | Khavda | Kheda | Khedbrahma | Kheralu | Kodinar | Kotdasanghani | Kunkawav | Kutch | Kutchmandvi | Kutiyana | Lakhpat | Lakhtar | Lalpur | Limbdi | Limkheda | Lunavada | M.M.Mangrol | Mahuva | Malia-Hatina | Maliya | Malpur | Manavadar | Mandvi | Mangrol | Mehmedabad | Mehsana | Miyagam | Modasa | Morvi | Muli | Mundra | Nadiad | Nakhatrana | Nalia | Narmada | Naswadi | Navasari | Nizar | Okha | Paddhari | Padra | Palanpur | Palitana | Panchmahals | Patan | Pavijetpur | Porbandar | Prantij | Radhanpur | Rahpar | Rajaula | Rajkot | Rajpipla | Ranavav | Sabarkantha | Sanand | Sankheda | Santalpur | Santrampur | Savarkundla | Savli | Sayan | Sayla | Shehra | Sidhpur | Sihor | Sojitra | Sumrasar | Surat | Surendranagar | Talaja | Thara | Tharad | Thasra | Una-Diu | Upleta | Vadgam | Vadodara | Valia | Vallabhipur | Valod | Valsad | Vanthali | Vapi | Vav | Veraval | Vijapur | Viramgam | Visavadar | Visnagar | Vyara | Waghodia | Wankaner \",\n  ],\n  \n  [   \"Haryana\",\n      \"HR\",\n      \" Adampur Mandi | Ambala | Assandh | Bahadurgarh | Barara | Barwala | Bawal | Bawanikhera | Bhiwani | Charkhidadri | Cheeka | Chhachrauli | Dabwali | Ellenabad | Faridabad | Fatehabad | Ferojpur Jhirka | Gharaunda | Gohana | Gurgaon | Hansi | Hisar | Jagadhari | Jatusana | Jhajjar | Jind | Julana | Kaithal | Kalanaur | Kalanwali | Kalka | Karnal | Kosli | Kurukshetra | Loharu | Mahendragarh | Meham | Mewat | Mohindergarh | Naraingarh | Narnaul | Narwana | Nilokheri | Nuh | Palwal | Panchkula | Panipat | Pehowa | Ratia | Rewari | Rohtak | Safidon | Sirsa | Siwani | Sonipat | Tohana | Tohsam | Yamunanagar \",\n  ],\n  \n  [\"Himachal Pradesh\",\n  \"HP\",\n  \" Amb | Arki | Banjar | Bharmour | Bilaspur | Chamba | Churah | Dalhousie | Dehra Gopipur | Hamirpur | Jogindernagar | Kalpa | Kangra | Kinnaur | Kullu | Lahaul | Mandi | Nahan | Nalagarh | Nirmand | Nurpur | Palampur | Pangi | Paonta | Pooh | Rajgarh | Rampur Bushahar | Rohru | Shimla | Sirmaur | Solan | Spiti | Sundernagar | Theog | Udaipur | Una\",],\n  \n  [\n      \"Jammu & Kashmir\",\n      \"JK\",\n      \" Akhnoor | Anantnag | Badgam | Bandipur | Baramulla | Basholi | Bedarwah | Budgam | Doda | Gulmarg | Jammu | Kalakot | Kargil | Karnah | Kathua | Kishtwar | Kulgam | Kupwara | Leh | Mahore | Nagrota | Nobra | Nowshera | Nyoma | Padam | Pahalgam | Patnitop | Poonch | Pulwama | Rajouri | Ramban | Ramnagar | Reasi | Samba | Srinagar | Udhampur | Vaishno Devi \",\n  ],\n    \n  [\n      \"Jharkhand\",\n      \"JH\",\n      \" Bagodar | Baharagora | Balumath | Barhi | Barkagaon | Barwadih | Basia | Bermo | Bhandaria | Bhawanathpur | Bishrampur | Bokaro | Bolwa | Bundu | Chaibasa | Chainpur | Chakardharpur | Chandil | Chatra | Chavparan | Daltonganj | Deoghar | Dhanbad | Dumka | Dumri | Garhwa | Garu | Ghaghra | Ghatsila | Giridih | Godda | Gomia | Govindpur | Gumla | Hazaribagh | Hunterganj | Ichak | Itki | Jagarnathpur | Jamshedpur | Jamtara | Japla | Jharmundi | Jhinkpani | Jhumaritalaiya | Kathikund | Kharsawa | Khunti | Koderma | Kolebira | Latehar | Lohardaga | Madhupur | Mahagama | Maheshpur Raj | Mandar | Mandu | Manoharpur | Muri | Nagarutatri | Nala | Noamundi | Pakur | Palamu | Palkot | Patan | Rajdhanwar | Rajmahal | Ramgarh | Ranchi | Sahibganj | Saraikela | Simaria | Simdega | Singhbhum | Tisri | Torpa \",\n  ],\n  [\n      \"Karnataka\",\n      \"KA\",\n      \" Afzalpur | Ainapur | Aland | Alur | Anekal | Ankola | Arsikere | Athani | Aurad | Bableshwar | Badami | Bagalkot | Bagepalli | Bailhongal | Bangalore | Bangalore Rural | Bangarpet | Bantwal | Basavakalyan | Basavanabagewadi | Basavapatna | Belgaum | Bellary | Belthangady | Belur | Bhadravati | Bhalki | Bhatkal | Bidar | Bijapur | Biligi | Chadchan | Challakere | Chamrajnagar | Channagiri | Channapatna | Channarayapatna | Chickmagalur | Chikballapur | Chikkaballapur | Chikkanayakanahalli | Chikkodi | Chikmagalur | Chincholi | Chintamani | Chitradurga | Chittapur | Cowdahalli | Davanagere | Deodurga | Devangere | Devarahippargi | Dharwad | Doddaballapur | Gadag | Gangavathi | Gokak | Gowribdanpur | Gubbi | Gulbarga | Gundlupet | H.B.Halli | H.D. Kote | Haliyal | Hampi | Hangal | Harapanahalli | Hassan | Haveri | Hebri | Hirekerur | Hiriyur | Holalkere | Holenarsipur | Honnali | Honnavar | Hosadurga | Hosakote | Hosanagara | Hospet | Hubli | Hukkeri | Humnabad | Hungund | Hunsagi | Hunsur | Huvinahadagali | Indi | Jagalur | Jamkhandi | Jewargi | Joida | K.R. Nagar | Kadur | Kalghatagi | Kamalapur | Kanakapura | Kannada | Kargal | Karkala | Karwar | Khanapur | Kodagu | Kolar | Kollegal | Koppa | Koppal | Koratageri | Krishnarajapet | Kudligi | Kumta | Kundapur | Kundgol | Kunigal | Kurugodu | Kustagi | Lingsugur | Madikeri | Madugiri | Malavalli | Malur | Mandya | Mangalore | Manipal | Manvi | Mashal | Molkalmuru | Mudalgi | Muddebihal | Mudhol | Mudigere | Mulbagal | Mundagod | Mundargi | Murugod | Mysore | Nagamangala | Nanjangud | Nargund | Narsimrajapur | Navalgund | Nelamangala | Nimburga | Pandavapura | Pavagada | Puttur | Raibag | Raichur | Ramdurg | Ranebennur | Ron | Sagar | Sakleshpur | Salkani | Sandur | Saundatti | Savanur | Sedam | Shahapur | Shankarnarayana | Shikaripura | Shimoga | Shirahatti | Shorapur | Siddapur | Sidlaghatta | Sindagi | Sindhanur | Sira | Sirsi | Siruguppa | Somwarpet | Sorab | Sringeri | Sriniwaspur | Srirangapatna | Sullia | T. Narsipur | Tallak | Tarikere | Telgi | Thirthahalli | Tiptur | Tumkur | Turuvekere | Udupi | Virajpet | Wadi | Yadgiri | Yelburga | Yellapur \",\n  \n  ],\n  [ \"Kerala\",\n  \"KE\",\n  \" Adimaly | Adoor | Agathy | Alappuzha | Alathur | Alleppey | Alwaye | Amini | Androth | Attingal | Badagara | Bitra | Calicut | Cannanore | Chetlet | Ernakulam | Idukki | Irinjalakuda | Kadamath | Kalpeni | Kalpetta | Kanhangad | Kanjirapally | Kannur | Karungapally | Kasargode | Kavarathy | Kiltan | Kochi | Koduvayur | Kollam | Kottayam | Kovalam | Kozhikode | Kunnamkulam | Malappuram | Mananthodi | Manjeri | Mannarghat | Mavelikkara | Minicoy | Munnar | Muvattupuzha | Nedumandad | Nedumgandam | Nilambur | Palai | Palakkad | Palghat | Pathaanamthitta | Pathanamthitta | Payyanur | Peermedu | Perinthalmanna | Perumbavoor | Punalur | Quilon | Ranni | Shertallai | Shoranur | Taliparamba | Tellicherry | Thiruvananthapuram | Thodupuzha | Thrissur | Tirur | Tiruvalla | Trichur | Trivandrum | Uppala | Vadakkanchery | Vikom | Wayanad \",\n  ],\n  \n  [\n      \"Lakshadweep\", \n      \"LA\",\n      \" Agatti Island | Bingaram Island | Bitra Island | Chetlat Island | Kadmat Island | Kalpeni Island | Kavaratti Island | Kiltan Island | Lakshadweep Sea | Minicoy Island | North Island | South Island \",\n  ],\n   \n  [ \n      \"Madhya Pradesh\",\n      \"MP\",\n      \" Agar | Ajaigarh | Alirajpur | Amarpatan | Amarwada | Ambah | Anuppur | Arone | Ashoknagar | Ashta | Atner | Babaichichli | Badamalhera | Badarwsas | Badnagar | Badnawar | Badwani | Bagli | Baihar | Balaghat | Baldeogarh | Baldi | Bamori | Banda | Bandhavgarh | Bareli | Baroda | Barwaha | Barwani | Batkakhapa | Begamganj | Beohari | Berasia | Berchha | Betul | Bhainsdehi | Bhander | Bhanpura | Bhikangaon | Bhimpur | Bhind | Bhitarwar | Bhopal | Biaora | Bijadandi | Bijawar | Bijaypur | Bina | Birsa | Birsinghpur | Budhni | Burhanpur | Buxwaha | Chachaura | Chanderi | Chaurai | Chhapara | Chhatarpur | Chhindwara | Chicholi | Chitrangi | Churhat | Dabra | Damoh | Datia | Deori | Deosar | Depalpur | Dewas | Dhar | Dharampuri | Dindori | Gadarwara | Gairatganj | Ganjbasoda | Garoth | Ghansour | Ghatia | Ghatigaon | Ghorandogri | Ghughari | Gogaon | Gohad | Goharganj | Gopalganj | Gotegaon | Gourihar | Guna | Gunnore | Gwalior | Gyraspur | Hanumana | Harda | Harrai | Harsud | Hatta | Hoshangabad | Ichhawar | Indore | Isagarh | Itarsi | Jabalpur | Jabera | Jagdalpur | Jaisinghnagar | Jaithari | Jaitpur | Jaitwara | Jamai | Jaora | Jatara | Jawad | Jhabua | Jobat | Jora | Kakaiya | Kannod | Kannodi | Karanjia | Kareli | Karera | Karhal | Karpa | Kasrawad | Katangi | Katni | Keolari | Khachrod | Khajuraho | Khakner | Khalwa | Khandwa | Khaniadhana | Khargone | Khategaon | Khetia | Khilchipur | Khirkiya | Khurai | Kolaras | Kotma | Kukshi | Kundam | Kurwai | Kusmi | Laher | Lakhnadon | Lamta | Lanji | Lateri | Laundi | Maheshwar | Mahidpurcity | Maihar | Majhagwan | Majholi | Malhargarh | Manasa | Manawar | Mandla | Mandsaur | Manpur | Mauganj | Mawai | Mehgaon | Mhow | Morena | Multai | Mungaoli | Nagod | Nainpur | Narsingarh | Narsinghpur | Narwar | Nasrullaganj | Nateran | Neemuch | Niwari | Niwas | Nowgaon | Pachmarhi | Pandhana | Pandhurna | Panna | Parasia | Patan | Patera | Patharia | Pawai | Petlawad | Pichhore | Piparia | Pohari | Prabhapattan | Punasa | Pushprajgarh | Raghogarh | Raghunathpur | Rahatgarh | Raisen | Rajgarh | Rajpur | Ratlam | Rehli | Rewa | Sabalgarh | Sagar | Sailana | Sanwer | Sarangpur | Sardarpur | Satna | Saunsar | Sehore | Sendhwa | Seondha | Seoni | Seonimalwa | Shahdol | Shahnagar | Shahpur | Shajapur | Sheopur | Sheopurkalan | Shivpuri | Shujalpur | Sidhi | Sihora | Silwani | Singrauli | Sirmour | Sironj | Sitamau | Sohagpur | Sondhwa | Sonkatch | Susner | Tamia | Tarana | Tendukheda | Teonthar | Thandla | Tikamgarh | Timarani | Udaipura | Ujjain | Umaria | Umariapan | Vidisha | Vijayraghogarh | Waraseoni | Zhirnia \",\n  ],\n  [ \n      \"Maharashtra\",\n      \"MH\",\n      \" Achalpur | Aheri | Ahmednagar | Ahmedpur | Ajara | Akkalkot | Akola | Akole | Akot | Alibagh | Amagaon | Amalner | Ambad | Ambejogai | Amravati | Arjuni Merogaon | Arvi | Ashti | Atpadi | Aurangabad | Ausa | Babhulgaon | Balapur | Baramati | Barshi Takli | Barsi | Basmatnagar | Bassein | Beed | Bhadrawati | Bhamregadh | Bhandara | Bhir | Bhiwandi | Bhiwapur | Bhokar | Bhokardan | Bhoom | Bhor | Bhudargad | Bhusawal | Billoli | Brahmapuri | Buldhana | Butibori | Chalisgaon | Chamorshi | Chandgad | Chandrapur | Chandur | Chanwad | Chhikaldara | Chikhali | Chinchwad | Chiplun | Chopda | Chumur | Dahanu | Dapoli | Darwaha | Daryapur | Daund | Degloor | Delhi Tanda | Deogad | Deolgaonraja | Deori | Desaiganj | Dhadgaon | Dhanora | Dharani | Dhiwadi | Dhule | Dhulia | Digras | Dindori | Edalabad | Erandul | Etapalli | Gadhchiroli | Gadhinglaj | Gaganbavada | Gangakhed | Gangapur | Gevrai | Ghatanji | Golegaon | Gondia | Gondpipri | Goregaon | Guhagar | Hadgaon | Hatkangale | Hinganghat | Hingoli | Hingua | Igatpuri | Indapur | Islampur | Jalgaon | Jalna | Jamkhed | Jamner | Jath | Jawahar | Jintdor | Junnar | Kagal | Kaij | Kalamb | Kalamnuri | Kallam | Kalmeshwar | Kalwan | Kalyan | Kamptee | Kandhar | Kankavali | Kannad | Karad | Karjat | Karmala | Katol | Kavathemankal | Kedgaon | Khadakwasala | Khamgaon | Khed | Khopoli | Khultabad | Kinwat | Kolhapur | Kopargaon | Koregaon | Kudal | Kuhi | Kurkheda | Kusumba | Lakhandur | Langa | Latur | Lonar | Lonavala | Madangad | Madha | Mahabaleshwar | Mahad | Mahagaon | Mahasala | Mahaswad | Malegaon | Malgaon | Malgund | Malkapur | Malsuras | Malwan | Mancher | Mangalwedha | Mangaon | Mangrulpur | Manjalegaon | Manmad | Maregaon | Mehda | Mekhar | Mohadi | Mohol | Mokhada | Morshi | Mouda | Mukhed | Mul | Mumbai | Murbad | Murtizapur | Murud | Nagbhir | Nagpur | Nahavara | Nanded | Nandgaon | Nandnva | Nandurbar | Narkhed | Nashik | Navapur | Ner | Newasa | Nilanga | Niphad | Omerga | Osmanabad | Pachora | Paithan | Palghar | Pali | Pandharkawada | Pandharpur | Panhala | Paranda | Parbhani | Parner | Parola | Parseoni | Partur | Patan | Pathardi | Pathari | Patoda | Pauni | Peint | Pen | Phaltan | Pimpalner | Pirangut | Poladpur | Pune | Pusad | Pusegaon | Radhanagar | Rahuri | Raigad | Rajapur | Rajgurunagar | Rajura | Ralegaon | Ramtek | Ratnagiri | Raver | Risod | Roha | Sakarwadi | Sakoli | Sakri | Salekasa | Samudrapur | Sangamner | Sanganeshwar | Sangli | Sangola | Sanguem | Saoner | Saswad | Satana | Satara | Sawantwadi | Seloo | Shahada | Shahapur | Shahuwadi | Shevgaon | Shirala | Shirol | Shirpur | Shirur | Shirwal | Sholapur | Shri Rampur | Shrigonda | Shrivardhan | Sillod | Sinderwahi | Sindhudurg | Sindkheda | Sindkhedaraja | Sinnar | Sironcha | Soyegaon | Surgena | Talasari | Talegaon S.Ji Pant | Taloda | Tasgaon | Thane | Tirora | Tiwasa | Trimbak | Tuljapur | Tumsar | Udgir | Umarkhed | Umrane | Umrer | Urlikanchan | Vaduj | Velhe | Vengurla | Vijapur | Vita | Wada | Wai | Walchandnagar | Wani | Wardha | Warlydwarud | Warora | Washim | Wathar | Yavatmal | Yawal | Yeola | Yeotmal \",\n  ],\n   \n  [ \n      \"Manipur\",\n      \"MA\",\n      \" Bishnupur | Chakpikarong | Chandel | Chattrik | Churachandpur | Imphal | Jiribam | Kakching | Kalapahar | Mao | Mulam | Parbung | Sadarhills | Saibom | Sempang | Senapati | Sochumer | Taloulong | Tamenglong | Thinghat | Thoubal | Ukhrul \",\n  ],\n  [\n      \"Meghalaya\",\n      \"ME\",\n      \" Amlaren | Baghmara | Cherrapunjee | Dadengiri | Garo Hills | Jaintia Hills | Jowai | Khasi Hills | Khliehriat | Mariang | Mawkyrwat | Nongpoh | Nongstoin | Resubelpara | Ri Bhoi | Shillong | Tura | Williamnagar\",\n  ],\n  [\n      \"Mizoram\", \n      \"MI\",\n      \" Aizawl | Champhai | Demagiri | Kolasib | Lawngtlai | Lunglei | Mamit | Saiha | Serchhip\",\n  ],\n  [ \n      \"Nagaland\",\n      \"NA\",\n      \" Dimapur | Jalukie | Kiphire | Kohima | Mokokchung | Mon | Phek | Tuensang | Wokha | Zunheboto \",\n  ],\n     \n  [ \n      \"Orissa\",\n      \"OR\",\n      \" Anandapur | Angul | Anugul | Aska | Athgarh | Athmallik | Attabira | Bagdihi | Balangir | Balasore | Baleswar | Baliguda | Balugaon | Banaigarh | Bangiriposi | Barbil | Bargarh | Baripada | Barkot | Basta | Berhampur | Betanati | Bhadrak | Bhanjanagar | Bhawanipatna | Bhubaneswar | Birmaharajpur | Bisam Cuttack | Boriguma | Boudh | Buguda | Chandbali | Chhatrapur | Chhendipada | Cuttack | Daringbadi | Daspalla | Deodgarh | Deogarh | Dhanmandal | Dharamgarh | Dhenkanal | Digapahandi | Dunguripali | G. Udayagiri | Gajapati | Ganjam | Ghatgaon | Gudari | Gunupur | Hemgiri | Hindol | Jagatsinghapur | Jajpur | Jamankira | Jashipur | Jayapatna | Jeypur | Jharigan | Jharsuguda | Jujumura | Kalahandi | Kalimela | Kamakhyanagar | Kandhamal | Kantabhanji | Kantamal | Karanjia | Kashipur | Kendrapara | Kendujhar | Keonjhar | Khalikote | Khordha | Khurda | Komana | Koraput | Kotagarh | Kuchinda | Lahunipara | Laxmipur | M. Rampur | Malkangiri | Mathili | Mayurbhanj | Mohana | Motu | Nabarangapur | Naktideul | Nandapur | Narlaroad | Narsinghpur | Nayagarh | Nimapara | Nowparatan | Nowrangapur | Nuapada | Padampur | Paikamal | Palla Hara | Papadhandi | Parajang | Pardip | Parlakhemundi | Patnagarh | Pattamundai | Phiringia | Phulbani | Puri | Puruna Katak | R. Udayigiri | Rairakhol | Rairangpur | Rajgangpur | Rajkhariar | Rayagada | Rourkela | Sambalpur | Sohela | Sonapur | Soro | Subarnapur | Sunabeda | Sundergarh | Surada | T. Rampur | Talcher | Telkoi | Titlagarh | Tumudibandha | Udala | Umerkote \",\n  ],\n  [ \n      \"Pondicherry\",\n      \"PO\",\n      \" Bahur | Karaikal | Mahe | Pondicherry | Purnankuppam | Valudavur | Villianur | Yanam \",\n  ],\n  [\n      \"Punjab\",\n      \"PU\",\n      \" Abohar | Ajnala | Amritsar | Balachaur | Barnala | Batala | Bathinda | Chandigarh | Dasua | Dinanagar | Faridkot | Fatehgarh Sahib | Fazilka | Ferozepur | Garhashanker | Goindwal | Gurdaspur | Guruharsahai | Hoshiarpur | Jagraon | Jalandhar | Jugial | Kapurthala | Kharar | Kotkapura | Ludhiana | Malaut | Malerkotla | Mansa | Moga | Muktasar | Nabha | Nakodar | Nangal | Nawanshahar | Nawanshahr | Pathankot | Patiala | Patti | Phagwara | Phillaur | Phulmandi | Quadian | Rajpura | Raman | Rayya | Ropar | Rupnagar | Samana | Samrala | Sangrur | Sardulgarh | Sarhind | SAS Nagar | Sultanpur Lodhi | Sunam | Tanda Urmar | Tarn Taran | Zira \",\n  ],\n   \n  [\n      \"Rajasthan\", \n      \"RJ\",\n      \" Abu Road | Ahore | Ajmer | Aklera | Alwar | Amber | Amet | Anupgarh | Asind | Aspur | Atru | Bagidora | Bali | Bamanwas | Banera | Bansur | Banswara | Baran | Bari | Barisadri | Barmer | Baseri | Bassi | Baswa | Bayana | Beawar | Begun | Behror | Bhadra | Bharatpur | Bhilwara | Bhim | Bhinmal | Bikaner | Bilara | Bundi | Chhabra | Chhipaborad | Chirawa | Chittorgarh | Chohtan | Churu | Dantaramgarh | Dausa | Deedwana | Deeg | Degana | Deogarh | Deoli | Desuri | Dhariawad | Dholpur | Digod | Dudu | Dungarpur | Dungla | Fatehpur | Gangapur | Gangdhar | Gerhi | Ghatol | Girwa | Gogunda | Hanumangarh | Hindaun | Hindoli | Hurda | Jahazpur | Jaipur | Jaisalmer | Jalore | Jhalawar | Jhunjhunu | Jodhpur | Kaman | Kapasan | Karauli | Kekri | Keshoraipatan | Khandar | Kherwara | Khetri | Kishanganj | Kishangarh | Kishangarhbas | Kolayat | Kota | Kotputli | Kotra | Kotri | Kumbalgarh | Kushalgarh | Ladnun | Ladpura | Lalsot | Laxmangarh | Lunkaransar | Mahuwa | Malpura | Malvi | Mandal | Mandalgarh | Mandawar | Mangrol | Marwar-Jn | Merta | Nadbai | Nagaur | Nainwa | Nasirabad | Nathdwara | Nawa | Neem Ka Thana | Newai | Nimbahera | Nohar | Nokha | Onli | Osian | Pachpadara | Pachpahar | Padampur | Pali | Parbatsar | Phagi | Phalodi | Pilani | Pindwara | Pipalda | Pirawa | Pokaran | Pratapgarh | Raipur | Raisinghnagar | Rajgarh | Rajsamand | Ramganj Mandi | Ramgarh | Rashmi | Ratangarh | Reodar | Rupbas | Sadulshahar | Sagwara | Sahabad | Salumber | Sanchore | Sangaria | Sangod | Sapotra | Sarada | Sardarshahar | Sarwar | Sawai Madhopur | Shahapura | Sheo | Sheoganj | Shergarh | Sikar | Sirohi | Siwana | Sojat | Sri Dungargarh | Sri Ganganagar | Sri Karanpur | Sri Madhopur | Sujangarh | Taranagar | Thanaghazi | Tibbi | Tijara | Todaraisingh | Tonk | Udaipur | Udaipurwati | Uniayara | Vallabhnagar | Viratnagar \"\n  ],\n  [\n      \"Sikkim\",\n      \"SI\",\n      \" Barmiak | Be | Bhurtuk | Chhubakha | Chidam | Chubha | Chumikteng | Dentam | Dikchu | Dzongri | Gangtok | Gauzing | Gyalshing | Hema | Kerung | Lachen | Lachung | Lema | Lingtam | Lungthu | Mangan | Namchi | Namthang | Nanga | Nantang | Naya Bazar | Padamachen | Pakhyong | Pemayangtse | Phensang | Rangli | Rinchingpong | Sakyong | Samdong | Singtam | Siniolchu | Sombari | Soreng | Sosing | Tekhug | Temi | Tsetang | Tsomgo | Tumlong | Yangang | Yumtang \",\n  ],\n  [\n      \"Tamil Nadu\", \n      \"TN\",\n      \" Ambasamudram | Anamali | Arakandanallur | Arantangi | Aravakurichi | Ariyalur | Arkonam | Arni | Aruppukottai | Attur | Avanashi | Batlagundu | Bhavani | Chengalpattu | Chengam | Chennai | Chidambaram | Chingleput | Coimbatore | Courtallam | Cuddalore | Cumbum | Denkanikoitah | Devakottai | Dharampuram | Dharmapuri | Dindigul | Erode | Gingee | Gobichettipalayam | Gudalur | Gudiyatham | Harur | Hosur | Jayamkondan | Kallkurichi | Kanchipuram | Kangayam | Kanyakumari | Karaikal | Karaikudi | Karur | Keeranur | Kodaikanal | Kodumudi | Kotagiri | Kovilpatti | Krishnagiri | Kulithalai | Kumbakonam | Kuzhithurai | Madurai | Madurantgam | Manamadurai | Manaparai | Mannargudi | Mayiladuthurai | Mayiladutjurai | Mettupalayam | Metturdam | Mudukulathur | Mulanur | Musiri | Nagapattinam | Nagarcoil | Namakkal | Nanguneri | Natham | Neyveli | Nilgiris | Oddanchatram | Omalpur | Ootacamund | Ooty | Orathanad | Palacode | Palani | Palladum | Papanasam | Paramakudi | Pattukottai | Perambalur | Perundurai | Pollachi | Polur | Pondicherry | Ponnamaravathi | Ponneri | Pudukkottai | Rajapalayam | Ramanathapuram | Rameshwaram | Ranipet | Rasipuram | Salem | Sankagiri | Sankaran | Sathiyamangalam | Sivaganga | Sivakasi | Sriperumpudur | Srivaikundam | Tenkasi | Thanjavur | Theni | Thirumanglam | Thiruraipoondi | Thoothukudi | Thuraiyure | Tindivanam | Tiruchendur | Tiruchengode | Tiruchirappalli | Tirunelvelli | Tirupathur | Tirupur | Tiruttani | Tiruvallur | Tiruvannamalai | Tiruvarur | Tiruvellore | Tiruvettipuram | Trichy | Tuticorin | Udumalpet | Ulundurpet | Usiliampatti | Uthangarai | Valapady | Valliyoor | Vaniyambadi | Vedasandur | Vellore | Velur | Vilathikulam | Villupuram | Virudhachalam | Virudhunagar | Wandiwash | Yercaud \",\n  ],\n   \n  [\n      \"Tripura\",\n      \"TR\",\n      \" Agartala | Ambasa | Bampurbari | Belonia | Dhalai | Dharam Nagar | Kailashahar | Kamal Krishnabari | Khopaiyapara | Khowai | Phuldungsei | Radha Kishore Pur | Tripura \",\n  ],\n  [\n      \"Uttar Pradesh\",\n      \"UP\",\n  \" Achhnera | Agra | Akbarpur | Aliganj | Aligarh | Allahabad | Ambedkar Nagar | Amethi | Amiliya | Amroha | Anola | Atrauli | Auraiya | Azamgarh | Baberu | Badaun | Baghpat | Bagpat | Baheri | Bahraich | Ballia | Balrampur | Banda | Bansdeeh | Bansgaon | Bansi | Barabanki | Bareilly | Basti | Bhadohi | Bharthana | Bharwari | Bhogaon | Bhognipur | Bidhuna | Bijnore | Bikapur | Bilari | Bilgram | Bilhaur | Bindki | Bisalpur | Bisauli | Biswan | Budaun | Budhana | Bulandshahar | Bulandshahr | Capianganj | Chakia | Chandauli | Charkhari | Chhata | Chhibramau | Chirgaon | Chitrakoot | Chunur | Dadri | Dalmau | Dataganj | Debai | Deoband | Deoria | Derapur | Dhampur | Domariyaganj | Dudhi | Etah | Etawah | Faizabad | Farrukhabad | Fatehpur | Firozabad | Garauth | Garhmukteshwar | Gautam Buddha Nagar | Ghatampur | Ghaziabad | Ghazipur | Ghosi | Gonda | Gorakhpur | Gunnaur | Haidergarh | Hamirpur | Hapur | Hardoi | Harraiya | Hasanganj | Hasanpur | Hathras | Jalalabad | Jalaun | Jalesar | Jansath | Jarar | Jasrana | Jaunpur | Jhansi | Jyotiba Phule Nagar | Kadipur | Kaimganj | Kairana | Kaisarganj | Kalpi | Kannauj | Kanpur | Karchhana | Karhal | Karvi | Kasganj | Kaushambi | Kerakat | Khaga | Khair | Khalilabad | Kheri | Konch | Kumaon | Kunda | Kushinagar | Lalganj | Lalitpur | Lucknow | Machlishahar | Maharajganj | Mahoba | Mainpuri | Malihabad | Mariyahu | Math | Mathura | Mau | Maudaha | Maunathbhanjan | Mauranipur | Mawana | Meerut | Mehraun | Meja | Mirzapur | Misrikh | Modinagar | Mohamdabad | Mohamdi | Moradabad | Musafirkhana | Muzaffarnagar | Nagina | Najibabad | Nakur | Nanpara | Naraini | Naugarh | Nawabganj | Nighasan | Noida | Orai | Padrauna | Pahasu | Patti | Pharenda | Phoolpur | Phulpur | Pilibhit | Pitamberpur | Powayan | Pratapgarh | Puranpur | Purwa | Raibareli | Rampur | Ramsanehi Ghat | Rasara | Rath | Robertsganj | Sadabad | Safipur | Sagri | Saharanpur | Sahaswan | Sahjahanpur | Saidpur | Salempur | Salon | Sambhal | Sandila | Sant Kabir Nagar | Sant Ravidas Nagar | Sardhana | Shahabad | Shahganj | Shahjahanpur | Shikohabad | Shravasti | Siddharthnagar | Sidhauli | Sikandra Rao | Sikandrabad | Sitapur | Siyana | Sonbhadra | Soraon | Sultanpur | Tanda | Tarabganj | Tilhar | Unnao | Utraula | Varanasi | Zamania \",\n  ],\n  \n  [\n      \"Uttaranchal\",\n      \"UT\",\n      \" Almora | Bageshwar | Bhatwari | Chakrata | Chamoli | Champawat | Dehradun | Deoprayag | Dharchula | Dunda | Haldwani | Haridwar | Joshimath | Karan Prayag | Kashipur | Khatima | Kichha | Lansdown | Munsiari | Mussoorie | Nainital | Pantnagar | Partapnagar | Pauri Garhwal | Pithoragarh | Purola | Rajgarh | Ranikhet | Roorkee | Rudraprayag | Tehri Garhwal | Udham Singh Nagar | Ukhimath | Uttarkashi \",\n  ],\n  [\n      \"West Bengal\",\n      \"WB\",\n      \" Adra | Alipurduar | Amlagora | Arambagh | Asansol | Balurghat | Bankura | Bardhaman | Basirhat | Berhampur | Bethuadahari | Birbhum | Birpara | Bishanpur | Bolpur | Bongoan | Bulbulchandi | Burdwan | Calcutta | Canning | Champadanga | Contai | Cooch Behar | Daimond Harbour | Dalkhola | Dantan | Darjeeling | Dhaniakhali | Dhuliyan | Dinajpur | Dinhata | Durgapur | Gangajalghati | Gangarampur | Ghatal | Guskara | Habra | Haldia | Harirampur | Harishchandrapur | Hooghly | Howrah | Islampur | Jagatballavpur | Jalpaiguri | Jhalda | Jhargram | Kakdwip | Kalchini | Kalimpong | Kalna | Kandi | Karimpur | Katwa | Kharagpur | Khatra | Krishnanagar | Mal Bazar | Malda | Manbazar | Mathabhanga | Medinipur | Mekhliganj | Mirzapur | Murshidabad | Nadia | Nagarakata | Nalhati | Nayagarh | Parganas | Purulia | Raiganj | Rampur Hat | Ranaghat | Seharabazar | Siliguri | Suri | Takipur | Tamluk\"\n  ],\n  \n];\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport { StateRegionData } from \"../utils/source-data.js\";\nimport PropTypes from \"prop-types\";\n\nconst C = {\n  DISPLAY_TYPE_FULL: \"full\",\n  DISPLAY_TYPE_SHORT: \"short\",\n  REGION_LIST_DELIMITER: \"|\",\n  SINGLE_REGION_DELIMITER: \"~\",\n};\n\nconst { Option } = Select;\nclass StateDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: _filterCountries(\n        StateRegionData,\n        props.whitelist,\n        props.blacklist\n      ),\n    };\n  }\n\n  getCountries() {\n    const { valueType, labelType } = this.props;\n\n    return this.state.countries.map(([countryName, countrySlug]) => {\n      return (\n        <Option\n          value={valueType === C.DISPLAY_TYPE_SHORT ? countrySlug : countryName}\n          key={countrySlug}\n        >\n          {labelType === C.DISPLAY_TYPE_SHORT ? countrySlug : countryName}\n        </Option>\n      );\n    });\n  }\n\n  getDefaultOption() {\n    const { showDefaultOption, defaultOptionLabel } = this.props;\n    if (!showDefaultOption) {\n      return null;\n    }\n    return (\n      <Option value=\"\" key=\"default\">\n        {defaultOptionLabel}\n      </Option>\n    );\n  }\n\n  render() {\n    const { name, id, classes, value, onChange, onBlur, disabled } = this.props;\n    console.log(\"the value\", value);\n    const attrs = {\n      name,\n      value,\n      onChange: (val) => onChange(val),\n      onBlur: (e) => onBlur(e),\n      disabled,\n    };\n    if (id) {\n      attrs.id = id;\n    }\n    if (classes) {\n      attrs.className = classes;\n    }\n\n    return (\n      <Select {...attrs}>\n        {this.getDefaultOption()}\n        {this.getCountries()}\n      </Select>\n    );\n  }\n}\nStateDropdown.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n  id: PropTypes.string,\n  classes: PropTypes.string,\n  showDefaultOption: PropTypes.bool,\n  defaultOptionLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  labelType: PropTypes.oneOf([C.DISPLAY_TYPE_FULL, C.DISPLAY_TYPE_SHORT]),\n  valueType: PropTypes.oneOf([C.DISPLAY_TYPE_FULL, C.DISPLAY_TYPE_SHORT]),\n  whitelist: PropTypes.array,\n  blacklist: PropTypes.array,\n  disabled: PropTypes.bool,\n};\nStateDropdown.defaultProps = {\n  value: \"\",\n  name: \"rcrs-country\",\n  id: \"\",\n  classes: \"\",\n  showDefaultOption: true,\n  defaultOptionLabel: \"Select State\",\n  onChange: () => {},\n  onBlur: () => {},\n  labelType: C.DISPLAY_TYPE_FULL,\n  valueType: C.DISPLAY_TYPE_FULL,\n  whitelist: [],\n  blacklist: [],\n  disabled: false,\n};\n\nclass RegionDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { regions: this.getRegions(props.country) };\n    this.getRegions = this.getRegions.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return (\n      nextProps.country !== this.props.country ||\n      nextProps.value !== this.props.value\n    );\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.country === this.props.country) {\n      return;\n    }\n    this.setState({ regions: this.getRegions(nextProps.country) });\n  }\n\n  getRegions(country) {\n    if (!country) {\n      return [];\n    }\n\n    const { countryValueType } = this.props;\n    const searchIndex = countryValueType === C.DISPLAY_TYPE_FULL ? 0 : 1;\n    let regions = [];\n    StateRegionData.forEach((i) => {\n      if (i[searchIndex] === country) {\n        regions = i;\n        return;\n      }\n    });\n\n    // this could happen if the user is managing the state of the region/country themselves and screws up passing\n    // in a valid country\n    if (!regions || regions.length === 0) {\n      console.error(\n        \"Error. Unknown country passed: \" +\n          country +\n          '. If you\\'re passing a country shortcode, be sure to include countryValueType=\"short\" on the RegionDropdown'\n      );\n      return [];\n    }\n    return regions[2].split(C.REGION_LIST_DELIMITER).map((regionPair) => {\n      let [regionName, regionShortCode = null] = regionPair.split(\n        C.SINGLE_REGION_DELIMITER\n      );\n      return { regionName, regionShortCode };\n    });\n  }\n\n  getRegionList() {\n    const { labelType, valueType } = this.props;\n    return this.state.regions.map(({ regionName, regionShortCode }) => {\n      const label =\n        labelType === C.DISPLAY_TYPE_FULL ? regionName : regionShortCode;\n      const value =\n        valueType === C.DISPLAY_TYPE_FULL ? regionName : regionShortCode;\n      return (\n        <Option value={value} key={regionName}>\n          {label}\n        </Option>\n      );\n    });\n  }\n\n  // there are two default options. The \"blank\" option which shows up when the user hasn't selected a country yet, and\n  // a \"default\" option which shows\n  getDefaultOption() {\n    const {\n      blankOptionLabel,\n      showDefaultOption,\n      defaultOptionLabel,\n      country,\n    } = this.props;\n    if (!country) {\n      return <Option value=\"\">{blankOptionLabel}</Option>;\n    }\n    if (showDefaultOption) {\n      return <Option value=\"\">{defaultOptionLabel}</Option>;\n    }\n    return null;\n  }\n\n  render() {\n    const {\n      value,\n      country,\n      onChange,\n      onBlur,\n      id,\n      name,\n      classes,\n      disabled,\n      disableWhenEmpty,\n    } = this.props;\n    const isDisabled = disabled || (disableWhenEmpty && country === \"\");\n    const attrs = {\n      name,\n      value,\n      onChange: (val) => onChange(val),\n      onBlur: (e) => onBlur(e),\n      disabled: isDisabled,\n    };\n    if (id) {\n      attrs.id = id;\n    }\n    if (classes) {\n      attrs.className = classes;\n    }\n\n    return (\n      <Select {...attrs}>\n        {this.getDefaultOption()}\n        {this.getRegionList()}\n      </Select>\n    );\n  }\n}\nRegionDropdown.propTypes = {\n  country: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n  id: PropTypes.string,\n  classes: PropTypes.string,\n  blankOptionLabel: PropTypes.string,\n  showDefaultOption: PropTypes.bool,\n  defaultOptionLabel: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  labelType: PropTypes.string,\n  valueType: PropTypes.string,\n  disabled: PropTypes.bool,\n  disableWhenEmpty: PropTypes.bool,\n};\nRegionDropdown.defaultProps = {\n  country: \"\",\n  value: \"\",\n  name: \"rcrs-region\",\n  id: \"\",\n  classes: \"\",\n  blankOptionLabel: \"Select City\",\n  showDefaultOption: true,\n  defaultOptionLabel: \"Select City\",\n  onChange: () => {},\n  onBlur: () => {},\n  countryValueType: C.DISPLAY_TYPE_FULL,\n  labelType: C.DISPLAY_TYPE_FULL,\n  valueType: C.DISPLAY_TYPE_FULL,\n  disabled: false,\n  disableWhenEmpty: false,\n};\n\n// ------------------------- helpers --------------------------------\n\n// called on country field initialization. It reduces the subset of countries depending on whether the user\n// specified a white/blacklist\nfunction _filterCountries(countries, whitelist, blacklist) {\n  var filteredCountries = countries;\n\n  // N.B. I'd rather use ES6 array.includes() but it requires a polyfill on various browsers. Bit surprising that\n  // babel doesn't automatically convert it to ES5-friendly code, like the new syntax additions, but that requires\n  // a separate polyfill which is a total kludge\n  if (whitelist.length > 0) {\n    filteredCountries = countries.filter(([, countrySlug]) => {\n      return whitelist.indexOf(countrySlug) > -1;\n    });\n  } else if (blacklist.length > 0) {\n    filteredCountries = countries.filter(([, countrySlug]) => {\n      return blacklist.indexOf(countrySlug) === -1;\n    });\n  }\n\n  return filteredCountries;\n}\n\nexport { StateDropdown, RegionDropdown, StateRegionData };\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, Card } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { addCompany, getCompanyName } from \"../actions/companyActions\";\nimport { StateDropdown, RegionDropdown } from \"./DropdownSelector\";\nimport { useTranslation } from \"react-i18next\";\nfunction CompanyOnBoard(props) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [State, setState] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  useEffect(() => {\n    dispatch(getCompanyName());\n  }, [dispatch]);\n  const { companyName } = useSelector((state) => state.company);\n  if (companyName.length > 0) {\n    //user already has a company\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <div\n      className=\"form-container\"\n      style={{\n        boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n        borderRadius: \"20px\",\n      }}\n    >\n      <Card title= {t(\"CompanyInformation\", \"Company Information\")} style={{ borderRadius: \"20px\" }}>\n        <Form\n          initialValues={{\n            companyName: \"\",\n            contactPersonName: \"\",\n            state: State,\n            city: region,\n          }}\n          onFinish={(values) => {\n            dispatch(addCompany(values));\n            props.history.push(\"/company-info-2\");\n          }}\n        >\n          <Form.Item\n            name=\"companyName\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter company name!\",\n              },\n            ]}\n          >\n            <Input\n              style={{ borderRadius: \"25px\" }}\n              placeholder={t(\"CompanyName\", \"Company Name\" )}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"contactPersonName\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter contact person name!\",\n              },\n            ]}\n          >\n            <Input\n              style={{ borderRadius: \"25px\" }}\n              placeholder= {t(\"ContactPersonName\", \"Contact Person Name\" )}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"contactPersonDesignation\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter contact person designation!\",\n              },\n            ]}\n          >\n            <Input\n              style={{ borderRadius: \"25px\" }}\n              placeholder= {t(\"contactPersonDesignation\", \"Contact Person Designation\" )}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"gstNumber\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter company GST Number!\",\n              },\n            ]}\n          >\n            <Input\n              style={{ borderRadius: \"25px\" }}\n              placeholder= {t(\"gstNumber\", \"GST Number\" )}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"address\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter company address!\",\n              },\n            ]}\n          >\n            <Input\n              style={{ borderRadius: \"25px\" }}\n              placeholder= {t(\"address\", \"Address\" )}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"state\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter state!\",\n              },\n            ]}\n          >\n            <StateDropdown value={State} onChange={(val) => setState(val)} />\n          </Form.Item>\n          <Form.Item\n            name=\"city\" \n            rules={[\n              {\n                required: true,\n                message: \"Please enter city!\",\n              },\n            ]}\n          >\n            <RegionDropdown\n              country={State}\n              value={region}\n              onChange={(val) => setRegion(val)}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button\n              style={{\n                height: \"auto\",\n                backgroundColor: \"#5854FF\",\n                borderRadius: \"24px\",\n              }}\n              type=\"primary\"\n              size=\"large\"\n              htmlType=\"submit\"\n            >\n              {t(\"Next\", \"Next\" )}\n            </Button>{\" \"}\n          </Form.Item>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n\nexport default withRouter(CompanyOnBoard);","import React, { useState } from \"react\";\nimport { Form, Input, Button, Card, Select, Checkbox } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { StateDropdown, RegionDropdown } from \"./DropdownSelector\";\nimport { addLabourRequirements } from \"../actions/labourActions\";\nimport { useTranslation } from \"react-i18next\";\nfunction CompanyOnBoard2(props) {\n  const { t } = useTranslation();\n  const { Option } = Select;\n  const [skill, setSkill] = useState(undefined);\n  const [State, setState] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const dispatch = useDispatch();\n  return (\n    <div\n      className=\"form-container\"\n      style={{\n        boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n        borderRadius: \"20px\",\n      }}\n    >\n      <Card title= {t(\"LabourInformation\", \"Labour Information\")} style={{ borderRadius: \"20px\" }}>\n        <Form\n          initialValues={{\n            stateName: State,\n            cityName: region,\n            minimumDurationOfWork: \"\",\n            maximumWagePerHour: \"\",\n            labourRequired: \"\",\n            skillsNeeded: skill,\n            relocationCost: false,\n          }}\n          onFinish={(values) => {\n            dispatch(addLabourRequirements(values));\n            props.history.push(\"/dashboard\");\n          }}\n        >\n          <Form.Item\n            name=\"labourRequired\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter labour amount!\",\n              },\n            ]}\n          >\n            <Input\n              style={{ borderRadius: \"25px\" }}\n              placeholder={t(\"labourRequired\", \"How many labour do you need?\")}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"skillsNeeded\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter skills needed!\",\n              },\n            ]}\n          >\n            <Select\n              placeholder= {t(\"skillsNeeded\", \"Select a Skill\")}\n              mode=\"multiple\"\n              onChange={(val) => setSkill(val)}\n              value={skill}\n            >\n              <Option value=\"Mason\"> {t(\"mason\", \"Mason\")} </Option>\n              <Option value=\"Masons Helper\"> {t(\"MasonsHelper\", \"Masons Helper\")}</Option>\n              <Option value=\"Barbenders\">{t(\"Barbenders\", \"Barbenders\")}</Option>\n              <Option value=\"Barbenders Helper\">{t(\"BarbendersHelper\", \"Barbenders Helper\")}</Option>\n              <Option value=\"Carpenters\">{t(\"Carpenters\", \"Carpenters\")}</Option>\n              <Option value=\"Carpenters Helper\">{t(\"CarpentersHelper\", \"Carpenters Helper\")}</Option>\n              <Option value=\"Plumbers Helper\">{t(\"PlumbersHelper\", \"Plumbers Helper\")}</Option>\n              <Option value=\"Flooring\">{t(\"Flooring\", \"Flooring\")}</Option>\n              <Option value=\"Flooring Helper\">{t(\"FlooringHelper\", \"Flooring Helper\")}</Option>\n              <Option value=\"Painters\">{t(\"Painters\", \"Painters\")}</Option>\n              <Option value=\"Painters Helper\">{t(\"PaintersHelper\", \"Painters Helper\")}</Option>\n              <Option value=\"HVAC Ducting\">{t(\"HVACDucting\", \"HVAC Ducting\")}</Option>\n              <Option value=\"HVAC Ducting Helper\">{t(\"HVACDuctingHelper\", \"HVAC Ducting Helper\")}</Option>\n              <Option value=\"Electricians\">{t(\"Electricians\", \"Electricians\")}</Option>\n              <Option value=\"Electricians Helper\">{t(\"ElectriciansHelper\", \"Electricians Helper\")}</Option>\n              <Option value=\"Male Mazdoor\">{t(\"MaleMazdoor\", \"Male Mazdoor\")}</Option>\n              <Option value=\"Female Mazdoor\">{t(\"FemaleMazdoor\", \"Female Mazdoor\")}</Option>\n              <Option value=\"Cleaners\">{t(\"Cleaners\", \"Cleaners\")}</Option>\n              <Option value=\"Loading Unloading Helper\">{t(\"LoadingUnloadingHelper\", \"Loading Unloading Helper\")}</Option>\n              <Option value=\"Welders\">{t(\"Welders\", \"Welders\")}</Option>\n              <Option value=\"Foreman Munshi\">{t(\"ForemanMunshi\", \"Foreman Munshi\")}</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            name=\"stateName\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter state!\",\n              },\n            ]}\n          >\n            <StateDropdown value={State} onChange={(val) => setState(val)} />\n          </Form.Item>\n          <Form.Item\n            name=\"cityName\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter city!\",\n              },\n            ]}\n          >\n            <RegionDropdown\n              country={State}\n              value={region}\n              onChange={(val) => setRegion(val)}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"maximumWagePerHour\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter max wage!\",\n              },\n            ]}\n          >\n            <Input\n              style={{ borderRadius: \"25px\" }}\n              placeholder= {t(\"maximumWagePerHour\", \"Maximum Wage Per Day\")}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"minimumDurationOfWork\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter min duration of work!\",\n              },\n            ]}\n          >\n            <Input\n              style={{ borderRadius: \"25px\" }}\n              placeholder={t(\"minimumDurationOfWork\", \"Minimum duration for work (in days)\")}\n            />\n          </Form.Item>\n          <Form.Item name=\"relocationCost\" valuePropName=\"checked\">\n            <Checkbox>{t(\"relocationCost\", \"Will you provide food and residence?\")}</Checkbox>\n          </Form.Item>\n          <Form.Item>\n            <Button\n              style={{\n                height: \"auto\",\n                backgroundColor: \"#5854FF\",\n                borderRadius: \"24px\",\n              }}\n              type=\"primary\"\n              size=\"large\"\n              htmlType=\"submit\"\n            >\n              Next\n            </Button>{\" \"}\n          </Form.Item>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n\nexport default withRouter(CompanyOnBoard2);\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, Card, Select, Checkbox } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { addLabour, fetchLabourName } from \"../actions/labourActions\";\nimport { StateDropdown, RegionDropdown } from \"./DropdownSelector\";\nimport { useTranslation } from \"react-i18next\";\nfunction LabourOnBoard(props) {\n  const { t } = useTranslation();\n  const { Option } = Select;\n  const dispatch = useDispatch();\n  const [State, setState] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const [StatePref, setStatePref] = useState(\"\");\n  const [regionPref, setRegionPref] = useState(\"\");\n  const [skill, setSkill] = useState(undefined);\n  useEffect(() => {\n    dispatch(fetchLabourName());\n  }, [dispatch]);\n  const { name } = useSelector((state) => state.labour.labourName);\n  if (name && name.length > 0) {\n    //labour already exist in db no need of form\n    return <Redirect to=\"/labour-dashboard\" />;\n  }\n  return (\n    <div\n      className=\"form-container\"\n      style={{\n        boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n        borderRadius: \"20px\",\n      }}\n    >\n      <Card title= {t(\"LabourInformation\", \"Labour Information\")} style={{ borderRadius: \"20px\" }}>\n        <Form\n          initialValues={{\n            workerName: \"\",\n            workerState: State,\n            workerCity: region,\n            workerSkills: skill,\n            statePreference: StatePref,\n            cityPreference: regionPref,\n            minimumWorkDuration: \"\",\n            minimumWage: \"\",\n            relocationCost: false,\n          }}\n          onFinish={(values) => {\n            dispatch(addLabour(values));\n            props.history.push(\"/labour-dashboard\");\n          }}\n        >\n          <Form.Item\n            name=\"workerName\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter contact person name!\",\n              },\n            ]}\n          >\n            <Input style={{ borderRadius: \"25px\" }} placeholder={t(\"LabourName\",\"Labour Name\")}  />\n          </Form.Item>\n          <Form.Item\n            name=\"workerState\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter state!\",\n              },\n            ]}\n          >\n            <StateDropdown value={State} onChange={(val) => setState(val)} />\n          </Form.Item>\n          <Form.Item\n            name=\"workerCity\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter city!\",\n              },\n            ]}\n          >\n            <RegionDropdown\n              country={State}\n              value={region}\n              onChange={(val) => setRegion(val)}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"workerSkills\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter skills!\",\n              },\n            ]}\n          >\n            <Select\n              placeholder= {t(\"SelectSkill\",\"Select a Skill\")}\n              mode=\"multiple\"\n              onChange={(val) => setSkill(val)}\n              value={skill}\n            >\n                <Option value=\"Mason\"> {t(\"mason\", \"Mason\")} </Option>\n              <Option value=\"Masons Helper\"> {t(\"MasonsHelper\", \"Masons Helper\")}</Option>\n              <Option value=\"Barbenders\">{t(\"Barbenders\", \"Barbenders\")}</Option>\n              <Option value=\"Barbenders Helper\">{t(\"BarbendersHelper\", \"Barbenders Helper\")}</Option>\n              <Option value=\"Carpenters\">{t(\"Carpenters\", \"Carpenters\")}</Option>\n              <Option value=\"Carpenters Helper\">{t(\"CarpentersHelper\", \"Carpenters Helper\")}</Option>\n              <Option value=\"Plumbers Helper\">{t(\"PlumbersHelper\", \"Plumbers Helper\")}</Option>\n              <Option value=\"Flooring\">{t(\"Flooring\", \"Flooring\")}</Option>\n              <Option value=\"Flooring Helper\">{t(\"FlooringHelper\", \"Flooring Helper\")}</Option>\n              <Option value=\"Painters\">{t(\"Painters\", \"Painters\")}</Option>\n              <Option value=\"Painters Helper\">{t(\"PaintersHelper\", \"Painters Helper\")}</Option>\n              <Option value=\"HVAC Ducting\">{t(\"HVACDucting\", \"HVAC Ducting\")}</Option>\n              <Option value=\"HVAC Ducting Helper\">{t(\"HVACDuctingHelper\", \"HVAC Ducting Helper\")}</Option>\n              <Option value=\"Electricians\">{t(\"Electricians\", \"Electricians\")}</Option>\n              <Option value=\"Electricians Helper\">{t(\"ElectriciansHelper\", \"Electricians Helper\")}</Option>\n              <Option value=\"Male Mazdoor\">{t(\"MaleMazdoor\", \"Male Mazdoor\")}</Option>\n              <Option value=\"Female Mazdoor\">{t(\"FemaleMazdoor\", \"Female Mazdoor\")}</Option>\n              <Option value=\"Cleaners\">{t(\"Cleaners\", \"Cleaners\")}</Option>\n              <Option value=\"Loading Unloading Helper\">{t(\"LoadingUnloadingHelper\", \"Loading Unloading Helper\")}</Option>\n              <Option value=\"Welders\">{t(\"Welders\", \"Welders\")}</Option>\n              <Option value=\"Foreman Munshi\">{t(\"ForemanMunshi\", \"Foreman Munshi\")}</Option>\n               </Select>\n          </Form.Item>\n          <Form.Item\n            name=\"statePreference\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter state!\",\n              },\n            ]}\n          >\n            <StateDropdown\n              value={StatePref}\n              onChange={(val) => setStatePref(val)}\n              defaultOptionLabel={t(\"statePreference\",\"Select State Preference\")}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"cityPreference\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter city!\",\n              },\n            ]}\n          >\n            <RegionDropdown\n              country={StatePref}\n              value={regionPref}\n              onChange={(val) => setRegionPref(val)}\n              blankOptionLabel= {t(\"cityPreference\",\"Select City Preference\")}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"minimumWorkDuration\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter min duration of work!\",\n              },\n            ]}\n          >\n            <Input\n              style={{ borderRadius: \"25px\" }}\n              placeholder= {t(\"minimumDurationOfWork\",\"Minimum duration for work (in days)\")}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"minimumWage\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter max wage!\",\n              },\n            ]}\n          >\n            <Input\n              style={{ borderRadius: \"25px\" }}\n              placeholder={t(\"minimumWagePerHour\",\"Minimum Wage Per Day\")}\n            />\n          </Form.Item>\n          <Form.Item name=\"relocationCost\" valuePropName=\"checked\">\n            <Checkbox>{t(\"relocationCostCost\",\"Will you need food and residence?\")}</Checkbox>\n          </Form.Item>\n          <Form.Item>\n            <Button\n              style={{\n                height: \"auto\",\n                backgroundColor: \"#5854FF\",\n                borderRadius: \"24px\",\n              }}\n              type=\"primary\"\n              size=\"large\"\n              htmlType=\"submit\"\n            >\n            {t(\"Next\",\"Next\")}\n            </Button>{\" \"}\n          </Form.Item>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n\nexport default withRouter(LabourOnBoard);\n","import React, { useState, Fragment } from \"react\";\nimport { Form, Input, Button, Card, Select, Checkbox } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport ShowAlert from \"./ShowAlert\";\nimport { addLabourCoordinator } from \"../actions/coordinatorActions\";\nimport { StateDropdown } from \"./DropdownSelector\";\nimport { useTranslation } from \"react-i18next\";\nfunction CoordinatorOnBoard(props) {\n  const { t } = useTranslation();\n  const { Option } = Select;\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const [State, setState] = useState();\n  const [StatePref, setStatePref] = useState();\n  const [skill, setSkill] = useState();\n  const [isMultiple, setMultiple] = useState(false);\n  const alerts = useSelector((state) => state.alerts);\n  return (\n    <Fragment>\n      {alerts && alerts.length > 0 && alerts.map((alert) => ShowAlert(alert))}\n      <div\n        className=\"form-container\"\n        style={{\n          boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n          borderRadius: \"20px\",\n        }}\n      >\n        <Card title={t(\"LabourInformations\", \"Labour Information\")} style={{ borderRadius: \"20px\" }}>\n          <Form\n            form={form}\n            initialValues={{\n              labourerName: \"\",\n              labourerPhoneNumber: \"\",\n              preferance: StatePref,\n              labourerState: State,\n              skills: skill,\n              minimumWage: \"\",\n              minimumWorkDuration: \"\",\n              relocationCost: false,\n            }}\n            onFinish={(values) => {\n              console.log(values);\n              dispatch(addLabourCoordinator(values));\n              if (isMultiple) {\n                setSkill([]);\n                setState(\"\");\n                setStatePref(\"\");\n                form.resetFields();\n                setMultiple(false);\n              } else {\n                props.history.push(\"/coordinator-dashboard\");\n              }\n            }}\n          >\n            <Form.Item\n              name=\"labourerName\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter contact person name!\",\n                },\n              ]}\n            >\n              <Input\n                style={{ borderRadius: \"25px\" }}\n                placeholder={t(\"LabourName\" , \"Labour Name\")}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"labourerPhoneNumber\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter contact person name!\",\n                },\n              ]}\n            >\n              <Input\n                style={{ borderRadius: \"25px\" }}\n                placeholder= {t(\"LabourPhoneNo\", \"Labour Phone No.\")}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"labourerState\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter state!\",\n                },\n              ]}\n            >\n              <StateDropdown value={State} onChange={(val) => setState(val)} />\n            </Form.Item>\n            <Form.Item\n              name=\"preference\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter state!\",\n                },\n              ]}\n            >\n              <StateDropdown\n                value={State}\n                defaultOptionLabel={\"Select State Preference\"}\n                onChange={(val) => setState(val)}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"skills\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter skills!\",\n                },\n              ]}\n            >\n              <Select\n                placeholder={t(\"SelectASkill\" , \"Select a Skill\")}\n                mode=\"multiple\"\n                allowClear={true}\n                autoClearSearchValue={true}\n                onChange={(val) => setSkill(val)}\n                value={skill}\n              >\n             <Option value=\"Mason\"> {t(\"mason\", \"Mason\")} </Option>\n              <Option value=\"Masons Helper\"> {t(\"MasonsHelper\", \"Masons Helper\")}</Option>\n              <Option value=\"Barbenders\">{t(\"Barbenders\", \"Barbenders\")}</Option>\n              <Option value=\"Barbenders Helper\">{t(\"BarbendersHelper\", \"Barbenders Helper\")}</Option>\n              <Option value=\"Carpenters\">{t(\"Carpenters\", \"Carpenters\")}</Option>\n              <Option value=\"Carpenters Helper\">{t(\"CarpentersHelper\", \"Carpenters Helper\")}</Option>\n              <Option value=\"Plumbers Helper\">{t(\"PlumbersHelper\", \"Plumbers Helper\")}</Option>\n              <Option value=\"Flooring\">{t(\"Flooring\", \"Flooring\")}</Option>\n              <Option value=\"Flooring Helper\">{t(\"FlooringHelper\", \"Flooring Helper\")}</Option>\n              <Option value=\"Painters\">{t(\"Painters\", \"Painters\")}</Option>\n              <Option value=\"Painters Helper\">{t(\"PaintersHelper\", \"Painters Helper\")}</Option>\n              <Option value=\"HVAC Ducting\">{t(\"HVACDucting\", \"HVAC Ducting\")}</Option>\n              <Option value=\"HVAC Ducting Helper\">{t(\"HVACDuctingHelper\", \"HVAC Ducting Helper\")}</Option>\n              <Option value=\"Electricians\">{t(\"Electricians\", \"Electricians\")}</Option>\n              <Option value=\"Electricians Helper\">{t(\"ElectriciansHelper\", \"Electricians Helper\")}</Option>\n              <Option value=\"Male Mazdoor\">{t(\"MaleMazdoor\", \"Male Mazdoor\")}</Option>\n              <Option value=\"Female Mazdoor\">{t(\"FemaleMazdoor\", \"Female Mazdoor\")}</Option>\n              <Option value=\"Cleaners\">{t(\"Cleaners\", \"Cleaners\")}</Option>\n              <Option value=\"Loading Unloading Helper\">{t(\"LoadingUnloadingHelper\", \"Loading Unloading Helper\")}</Option>\n              <Option value=\"Welders\">{t(\"Welders\", \"Welders\")}</Option>\n              <Option value=\"Foreman Munshi\">{t(\"ForemanMunshi\", \"Foreman Munshi\")}</Option>\n           \n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"minimumWorkDuration\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter min duration of work!\",\n                },\n              ]}\n            >\n              <Input\n                style={{ borderRadius: \"25px\" }}\n                placeholder= {t(\"minimumDurationOfWork\",\"Minimum duration for work (in days)\")}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"minimumWage\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter max wage!\",\n                },\n              ]}\n            >\n              <Input\n                style={{ borderRadius: \"25px\" }}\n                placeholder= {t(\"minimumWagePerHour\" , \"Minimum Wage Per Hour\")}\n              />\n            </Form.Item>\n            <Form.Item name=\"relocationCost\" valuePropName=\"checked\">\n              <Checkbox> {t(\"relocationCostCost\" , \"Will you need food and residence ?\")}</Checkbox>\n            </Form.Item>\n            <Form.Item>\n              <Button\n                style={{\n                  height: \"auto\",\n                  backgroundColor: \"#5854FF\",\n                  borderRadius: \"24px\",\n                }}\n                type=\"primary\"\n                size=\"large\"\n                htmlType=\"submit\"\n              >\n                 {t(\"Next\" , \"Next\")}\n              </Button>{\" \"}\n            </Form.Item>\n            <Form.Item>\n              <Button\n                style={{\n                  height: \"auto\",\n                  backgroundColor: \"#5854FF\",\n                  borderRadius: \"24px\",\n                }}\n                type=\"primary\"\n                onClick={() => setMultiple(true)}\n                size=\"large\"\n                htmlType=\"submit\"\n              >\n                  {t(\"AddAnotherLabour\" , \"Add Another Labour\")}\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default withRouter(CoordinatorOnBoard);\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Form, Input, Button, Card } from \"antd\";\nimport { isEmpty } from \"lodash\";\nimport ShowAlert from \"./ShowAlert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport {\n  registerCoordinator,\n  coordinatorLabourName,\n} from \"../actions/coordinatorActions\";\nimport { useTranslation } from \"react-i18next\";\nimport { StateDropdown, RegionDropdown } from \"./DropdownSelector\";\n\nfunction CoordinatorRegister(props) {\n  const { t } = useTranslation();\n  useEffect(() => {\n    dispatch(coordinatorLabourName());\n  }, []);\n  const dispatch = useDispatch();\n  const [State, setState] = useState();\n  const [region, setRegion] = useState();\n  const alerts = useSelector((state) => state.alerts);\n  const { name } = useSelector((state) => state.coordinator.labourName);\n  if (!isEmpty(name)) {\n    return <Redirect to=\"/coordinator-dashboard\" />;\n  }\n  return (\n    <Fragment>\n      {alerts && alerts.length > 0 && alerts.map((alert) => ShowAlert(alert))}\n      <div\n        className=\"form-container\"\n        style={{\n          boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n          borderRadius: \"20px\",\n        }}\n      >\n        <Card title= {t(\"CoordinatorInformation\", \"Coordinator Information\")} style={{ borderRadius: \"20px\" }}>\n          <Form\n            initialValues={{\n              personName: \"\",\n              city: region,\n              state: State,\n            }}\n            onFinish={(values) => {\n              console.log(values);\n              dispatch(registerCoordinator(values));\n              props.history.push(\"/coordinator-info\");\n            }}\n          >\n            <Form.Item\n              name=\"personName\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter contact person name!\",\n                },\n              ]}\n            >\n              <Input\n                style={{ borderRadius: \"25px\" }}\n                placeholder={t(\"CoordinatorName\" ,\"Coordinator Name\")}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"state\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter state!\",\n                },\n              ]}\n            >\n              <StateDropdown value={State} onChange={(val) => setState(val)} />\n            </Form.Item>\n            <Form.Item\n              name=\"city\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter city!\",\n                },\n              ]}\n            >\n              <RegionDropdown\n                country={State}\n                value={region}\n                onChange={(val) => setRegion(val)}\n              />\n            </Form.Item>\n            <Form.Item>\n              <Button\n                style={{\n                  height: \"auto\",\n                  backgroundColor: \"#5854FF\",\n                  borderRadius: \"24px\",\n                }}\n                type=\"primary\"\n                size=\"large\"\n                htmlType=\"submit\"\n              >\n                {t(\"Next\" ,\"Next\")}\n              </Button>{\" \"}\n            </Form.Item>\n          </Form>\n        </Card>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default withRouter(CoordinatorRegister);\n","import React, { Fragment } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Button, Card, Form, Input, InputNumber } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../actions/authActions\";\nimport { Icon } from \"@ant-design/compatible\";\nimport { useTranslation } from \"react-i18next\";\nimport ShowAlert from \"./ShowAlert\";\n\nfunction Login() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { isAuthenticated } = useSelector((state) => state.auth);\n  const alerts = useSelector((state) => state.alerts);\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/check-entity\" />;\n  }\n  return (\n    <Fragment>\n      {alerts && alerts.length > 0 && alerts.map((alert) => ShowAlert(alert))}\n      <div\n        className=\"form-container\"\n        style={{\n          boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n          borderRadius: \"20px\",\n        }}\n      >\n        <Card title={t(\"Login\", \"Login\")} style={{ borderRadius: \"20px\" }}>\n          <Form\n            initialValues={{ number: \"\", password: \"\" }}\n            onFinish={(values) => {\n              dispatch(login(values));\n            }}\n          >\n            <Form.Item\n              name=\"phoneNumber\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter a number!\",\n                },\n              ]}\n            >\n              <Input\n                type=\"number\"\n                style={{ borderRadius: \"25px\" }}\n                prefix={\n                  <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder=  {t(\"PhoneNumber\", \"Phone Number\")}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter a password!\",\n                },\n              ]}\n            >\n              <Input.Password\n                style={{ borderRadius: \"25px\" }}\n                prefix={\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder= {t(\"Password\", \"Password\")} \n              />\n            </Form.Item>\n            <Form.Item>\n              <Button\n                style={{\n                  height: \"auto\",\n                  backgroundColor: \"#5854FF\",\n                  borderRadius: \"24px\",\n                }}\n                type=\"primary\"\n                size=\"large\"\n                htmlType=\"submit\"\n              >\n                {t(\"Login\", \"Login\")}\n              </Button>{\" \"}\n               {t(\"Or\", \"Or\")} <Link to=\"/register\"> {t(\"RegisterNow\", \"Don't have an account Register now!\")} </Link>\n            </Form.Item>\n          </Form>\n        </Card>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Login;\n","import React, { Fragment } from \"react\";\nimport { Button } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nfunction EntitySelection() {\n  const { t } = useTranslation();\n  return (\n    <Fragment>\n      <div className=\"language-container\">\n        <h1> {t(\"entitySelection\", \"Please select the Entity\")}</h1>\n        <div className=\"buttons\">\n          <Link to=\"/login\">\n            <Button\n              style={{\n                marginRight: \"50px\",\n                height: \"auto\",\n                fontSize: \"1.5rem\",\n                padding: \"5px 40px\",\n                backgroundColor: \"#5854FF\",\n                borderRadius: \"10px\",\n              }}\n              type=\"primary\"\n              size=\"large\"\n            >\n              {t(\"company\", \"Company\")}\n            </Button>\n          </Link>\n          <Button\n            style={{\n              height: \"auto\",\n              backgroundColor: \"#5854FF\",\n              padding: \"5px 40px\",\n              fontSize: \"1.5rem\",\n              borderRadius: \"10px\",\n            }}\n            type=\"primary\"\n            size=\"large\"\n          >\n            {t(\"worker\", \"Worker\")}\n          </Button>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default EntitySelection;\n","import React, { useEffect, useState } from \"react\";\nimport { Menu } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport { Icon } from \"@ant-design/compatible\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nconst { SubMenu } = Menu;\nfunction SideNav({ location }) {\n  const { t } = useTranslation();\n  const name = location.pathname.split(\"/\")[2] || \"home\";\n  const { user } = useSelector((state) => state.auth);\n  const [current, setCurrent] = useState(name);\n  useEffect(() => {\n    setCurrent(name);\n  }, [name]);\n  return (\n    <Menu\n      onClick={(e) => setCurrent(e.key)}\n      selectedKeys={[current]}\n      mode=\"inline\"\n      defaultOpenKeys={[\"home\"]}\n      style={{\n        boxShadow: \"10px 0px 25px 0 rgba(0,0,0,0.09)\",\n        maxWidth: \"300px\",\n        height: \"100vh\",\n        position: \"fixed\",\n        zIndex: \"1\",\n        left: \"0\",\n      }}\n    >\n      <Menu.Item key=\"home\" icon={<Icon type=\"home\" />}>\n        {user && user.type === \"Labourer\" && (\n          <Link to=\"/labour-dashboard\">{t(\"WorkerOverview\", \"Worker Overview\")}</Link>\n        )}\n        {user && user.type === \"Company\" && (\n          <Link to=\"/dashboard\">{t(\"CompanyOverview\", \"Company Overview\")}</Link>\n        )}\n        {user && user.type === \"Coordinator\" && (\n          <Link to=\"/coordinator-dashboard\"> {t(\"WorkerOverview\", \"Overview\")}</Link>\n        )}\n      </Menu.Item>\n\n      <Menu.Item key=\"details\" icon={<Icon type=\"user\" />}>\n        {user && user.type === \"Labourer\" && (\n          <Link to=\"/labour-dashboard/details\"> {t(\"WorkerDetails\", \"Worker Details\")}</Link>\n        )}\n        {user && user.type === \"Company\" && (\n          <Link to=\"/dashboard/details\"> {t(\"RequestDetails\", \"Request Details\")}</Link>\n        )}\n        {user && user.type === \"Coordinator\" && (\n          <Link to=\"/coordinator-dashboard/details\">{t(\"RequestDetails\", \"Request Details\")}</Link>\n        )}\n      </Menu.Item>\n\n      <Menu.Item key=\"list\" icon={<Icon type=\"team\" />}>\n        {user && user.type === \"Labourer\" && (\n          <Link to=\"/labour-dashboard/list\"> {t(\"CompanyList\", \"Company List\")}</Link>\n        )}\n        {user && user.type === \"Company\" && (\n          <Link to=\"/dashboard/list\"> {t(\"WorkerList\", \"Worker List\")}</Link>\n        )}\n        {user && user.type === \"Coordinator\" && (\n          <Link to=\"/coordinator-dashboard/list\">{t(\"CompanyList\", \"Company List\")}</Link>\n        )}\n      </Menu.Item>\n\n      <Menu.Item key=\"market-trends\" icon={<Icon type=\"areaChart\" />}>\n        <Link to=\"/dashboard/market-trends\">\n          {\" \"}\n          {t(\"MarketTrends\", \"Market Trends\")}{\" \"}\n        </Link>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default withRouter(SideNav);\n","import React, { useEffect } from \"react\";\nimport { Card, Spin } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport Chart from \"react-apexcharts\";\nimport { activeLabours } from \"../actions/labourActions\";\nimport { useTranslation } from \"react-i18next\";\nfunction TotalLabours() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(activeLabours());\n  }, [dispatch]);\n  const { activeLaboursResults } = useSelector((state) => state.labour);\n  return (\n    <Card\n      title= {t(\"ActiveLaboursonSite\", \"Active Labours on Site\")}\n      style={{\n        borderRadius: \"20px\",\n        borderRadius: \"20px\",\n        boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n      }}\n    >\n      {isEmpty(activeLaboursResults) ? (\n        <Spin />\n      ) : (\n        <h1 style={{ fontSize: \"3rem\" }}>{activeLaboursResults.totalLabour}</h1>\n      )}\n      <h2>{t(\"TopStatesLabour\", \"Top States Distribution\")}</h2>\n      {isEmpty(activeLaboursResults) ? (\n        <Spin />\n      ) : (\n        <Chart\n          options={{ labels: activeLaboursResults.topStates }}\n          series={activeLaboursResults.percentageShare}\n          type=\"pie\"\n        />\n      )}\n    </Card>\n  );\n}\n\nexport default TotalLabours;\n","import React, { useEffect } from \"react\";\nimport { Card, Spin, List } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport TotalLabours from \"./TotalLabours\";\nimport { companyLookingFor, getCompanyName } from \"../actions/companyActions\";\nimport { useTranslation } from \"react-i18next\";\nfunction CompanyHeader(props) {\n  const { t,i18n } = useTranslation();\n  //console.log(\"This is the current language\",i18n.language);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(companyLookingFor());\n    dispatch(getCompanyName());\n  }, [dispatch]);\n  const { lookingForResult, companyName } = useSelector(\n    (state) => state.company\n  );\n  return (\n    <div className=\"company-header-container\">\n      <Card\n        title={companyName}\n        style={{\n          borderRadius: \"20px\",\n          boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n        }}\n      >\n        {isEmpty(lookingForResult) ? (\n          <Spin />\n        ) : (\n          <div style={{ height: \"450px\", overflow: \"auto\" }}>\n            <List\n              header={<h2>{t(\"CurrentRequests\", \"Requests\")}</h2>}\n              bordered\n              dataSource={lookingForResult.map(\n                (item) =>\n                  `Looking for labours in ${item.cityName} for  ${item.minimumDurationOfWork} days`\n              )}\n              renderItem={(item) => <List.Item>{item}</List.Item>}\n            />\n          </div>\n        )}\n      </Card>\n      <TotalLabours />\n    </div>\n  );\n}\n\nexport default CompanyHeader;\n","export const arrayTransform = (arr) => {\n  return arr.map((item) => ({\n    name: item[0],\n    city: item[1],\n    skills: item[2].join(\",\"),\n    phoneNumber: item[3],\n  }));\n};\n\nexport const arrayTransformCompany = (arr) => {\n  return arr.map((item) => ({\n    companyName: item[0],\n    companyPhoneNumber: item[1],\n    companyContactName: item[2],\n    companyCity: item[3],\n  }));\n};\n\nexport const transFormJobObject = (obj) => {\n  return Object.keys(obj.jobs).map((item) => ({\n    city: item,\n    jobs: obj.jobs[item],\n  }));\n};\n","export const columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Skill\",\n    dataIndex: \"skills\",\n    key: \"skills\",\n  },\n  {\n    title: \"City\",\n    dataIndex: \"city\",\n    key: \"city\",\n  },\n  {\n    title: \"Phone Number\",\n    dataIndex: \"phoneNumber\",\n    key: \"phoneNumber\",\n  },\n];\n\nexport const companyColumns = [\n  {\n    title: \"Company Name\",\n    dataIndex: \"companyName\",\n    key: \"companyName\",\n  },\n  {\n    title: \"City\",\n    dataIndex: \"companyCity\",\n    key: \"companyCity\",\n  },\n  {\n    title: \"Contact Company Person\",\n    dataIndex: \"companyContactName\",\n    key: \"companyContactName\",\n  },\n  {\n    title: \"Company Phone Number\",\n    dataIndex: \"companyPhoneNumber\",\n    key: \"companyPhoneNumber\",\n  },\n];\n","import React from \"react\";\nimport { Table, Card, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { companyColumns, columns } from \"../helpers/datasource\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction CompanyItem(props) {\n  const { t } = useTranslation();\n  const { user } = useSelector((state) => state.auth);\n  return (\n    <Card\n      style={{\n        boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n        margin: \"20px 0px\",\n        borderRadius: \"20px\",\n      }}\n    >\n      <Table\n        dataSource={props.data}\n        columns={\n          (!isEmpty(user) && user.type === \"Labourer\") ||\n          (!isEmpty(user) && user.type === \"Coordinator\")\n            ? companyColumns\n            : columns\n        }\n      />\n      {props.workersList ? (\n        <Link to=\"/company-info-2\">\n          <Button type=\"primary\">{t(\"AddNewWorkers\", \"Add new workers\")}</Button>\n        </Link>\n      ) : null}\n    </Card>\n  );\n}\n\nexport default CompanyItem;\n","import React, { useEffect } from \"react\";\nimport { Spin } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { arrayTransform } from \"../helpers/arrayTransform\";\nimport { isEmpty } from \"lodash\";\nimport CompanyItem from \"./CompanyItem\";\nimport { fetchLabourSelection } from \"../actions/labourActions\";\nimport { useTranslation } from \"react-i18next\";\nfunction LabourSelection() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchLabourSelection());\n  }, [dispatch]);\n  const { labourSelection, labourSelectionLoading } = useSelector(\n    (state) => state.labour\n  );\n  const finalResult = !isEmpty(labourSelection)\n    ? arrayTransform(labourSelection.output)\n    : [];\n  return (\n    <div>\n      <h1>{t(\"topLabour\", \"Top 5 Labours\")} </h1>\n      {!labourSelectionLoading ? (\n        <CompanyItem data={finalResult.slice(0, 4)} />\n      ) : (\n        <Spin />\n      )}\n    </div>\n  );\n}\n\nexport default LabourSelection;\n","import React from \"react\";\nimport CompanyHeader from \"./CompanyHeader\";\nimport LabourSelection from \"./LabourSelection\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction DashboardHome(props) {\n  const { t } = useTranslation();\n  return (\n    <div>\n      <h1> {t(\"CompanyOverview\", \"Company Overview\")}</h1>\n      <CompanyHeader />\n      <LabourSelection />\n    </div>\n  );\n}\n\nexport default DashboardHome;\n","import React, { useEffect, Fragment, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  companyRequests,\n  getCompanyName,\n  deleteAccount,\n} from \"../actions/companyActions\";\nimport { logout } from \"../actions/authActions\";\nimport { isEmpty } from \"lodash\";\nimport { Card, Button, List, Spin, Modal } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction CompanyRequests(props) {\n  const {t,i18n} = useTranslation();\n  const [modalState, setModalState] = useState({\n    modalText: \"Are you sure you want to delete\",\n    visible: false,\n  });\n  const showModal = () => setModalState({ ...modalState, visible: true });\n  const handleOk = () => {\n    //handle delete logic here...\n    dispatch(deleteAccount());\n    dispatch(logout());\n  };\n  const handleCancel = () => setModalState({ ...modalState, visible: false });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(companyRequests());\n    dispatch(getCompanyName());\n  }, []);\n  const { companyRequestResult, loading, companyName } = useSelector(\n    (state) => state.company\n  );\n  return (\n    <Card\n      style={{\n        borderRadius: \"20px\",\n        borderRadius: \"20px\",\n        boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n      }}\n    >\n      <h1>{companyName}</h1>\n      {isEmpty(companyRequestResult) ? (\n        <Spin />\n      ) : (\n        <div style={{ height: \"450px\", overflow: \"auto\" }}>\n          <List\n            header={<h2>{t(\"CurrentRequests\", \"Current Requests\")}</h2>}\n            bordered\n            dataSource={companyRequestResult.result.map(\n              (item) => `${item.workers} workers for ${item.numOfDays} days`\n            )}\n            renderItem={(item) => <List.Item>{item}</List.Item>}\n          />\n        </div>\n      )}\n\n      {isEmpty(companyRequestResult) ? (\n        <Spin />\n      ) : (\n        <Fragment>\n          <h2 className=\"request-number\">\n            {companyRequestResult.totalRequests}\n          </h2>\n          <span>{t(\"reqThisMonth\", \"requests this month \")}</span>\n        </Fragment>\n      )}\n      <Button\n        style={{ display: \"block\" }}\n        type=\"danger\"\n        size=\"large\"\n        onClick={showModal}\n      >\n       {t(\"DeleteAccount\", \"Delete Account\")}\n      </Button>\n      <Modal\n        title=\"Confirm\"\n        visible={modalState.visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <p> {t(\"SureDeleteAccount\", \"Are you sure you want to delete your whole account?\")}</p>\n      </Modal>\n    </Card>\n  );\n}\n\nexport default withRouter(CompanyRequests);\n","import React, { useEffect } from \"react\";\nimport { Form, Input, Button, Card, Spin } from \"antd\";\nimport { isEmpty } from \"lodash\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchEditableNames,\n  updateContactDetails,\n} from \"../actions/companyActions\";\nimport { Icon } from \"@ant-design/compatible\";\nimport { useTranslation } from \"react-i18next\";\nfunction CompanyInfo() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchEditableNames());\n  }, []);\n  const { t } = useTranslation();\n  const { editableNamesResult } = useSelector((state) => state.company);\n  if (isEmpty(editableNamesResult)) return null;\n  return (\n    <Card\n      title= {t(\"UpdateDetails\", \"Update Details\")}\n      style={{\n        borderRadius: \"20px\",\n        boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n      }}\n    >\n      {editableNamesResult.contactPersonName &&\n      editableNamesResult.companyPhoneNumber ? (\n        <Form\n          initialValues={{\n            contactPersonName: editableNamesResult.contactPersonName || \"\",\n            companyPhoneNumber: editableNamesResult.companyPhoneNumber || \"\",\n          }}\n          onFinish={(values) => {\n            console.log(values);\n            dispatch(updateContactDetails(values));\n          }}\n        >\n          <Form.Item\n            name=\"contactPersonName\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter contact person name!\",\n              },\n            ]}\n          >\n            <Input\n              style={{ borderRadius: \"25px\" }}\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder={t(\"ContactPersonName\", \"Contact Person Name\")}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"companyPhoneNumber\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter contact phone number!\",\n              },\n            ]}\n          >\n            <Input\n              style={{ borderRadius: \"25px\" }}\n              prefix={\n                <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n              }\n              name=\"number\"\n              placeholder= {t(\"PhoneNumber\", \"Contact Number\")}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button\n              style={{\n                height: \"auto\",\n                backgroundColor: \"#5854FF\",\n                borderRadius: \"24px\",\n              }}\n              type=\"primary\"\n              size=\"large\"\n              htmlType=\"submit\"\n            >\n               {t(\"Update\", \"Update\")}\n            </Button>\n          </Form.Item>\n        </Form>\n      ) : (\n        <Spin />\n      )}\n    </Card>\n  );\n}\n\nexport default CompanyInfo;\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Modal, Spin, Form } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addLocation, addNewLocation } from \"../actions/companyActions\";\nimport { StateDropdown, RegionDropdown } from \"./DropdownSelector\";\nimport { isEmpty } from \"lodash\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction AddLocation(props) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [modalState, setModalState] = useState({\n    visible: false,\n  });\n  const [State, setState] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const showModal = () => setModalState({ ...modalState, visible: true });\n  const handleOk = () => {\n    //handle add logic here...\n  };\n  const handleCancel = () => setModalState({ ...modalState, visible: false });\n  useEffect(() => {\n    dispatch(addLocation());\n  }, []);\n  const { addLocationResult } = useSelector((state) => state.company);\n  return (\n    <Card\n      title= {t(\"CurrentLocations\", \"Current Locations\")}\n      style={{\n        borderRadius: \"20px\",\n        borderRadius: \"20px\",\n        boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n      }}\n    >\n      {isEmpty(addLocationResult) ? (\n        <Spin />\n      ) : (\n        addLocationResult.location.map((item) => <h2>{item}</h2>)\n      )}\n      <Button type=\"primary\" onClick={showModal}>\n         {t(\"AddMoreLocations\", \"Add More Locations\")}\n      </Button>\n      <Modal\n        title= {t(\"AddnewLocation\", \"Add new Location\")}\n        visible={modalState.visible}\n        onOk={handleOk}\n        footer={[\n          <Button form=\"myForm\" key=\"submit\" htmlType=\"submit\" type=\"primary\">\n             {t(\"Submit\", \"Submit\")}\n          </Button>,\n          <Button onClick={handleCancel}> {t(\"Cancel\", \"Cancel\")}</Button>,\n        ]}\n        onCancel={handleCancel}\n      >\n        <Form\n          id=\"myForm\"\n          initialValues={{\n            state: State,\n            city: region,\n          }}\n          onFinish={(values) => {\n            console.log(\"the values\", values);\n            dispatch(addNewLocation(values));\n            handleCancel();\n          }}\n        >\n          <Form.Item\n            name=\"state\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter state!\",\n              },\n            ]}\n          >\n            <StateDropdown value={State} onChange={(val) => setState(val)} />\n          </Form.Item>\n          <Form.Item\n            name=\"city\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter city!\",\n              },\n            ]}\n          >\n            <RegionDropdown\n              country={State}\n              value={region}\n              onChange={(val) => setRegion(val)}\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </Card>\n  );\n}\n\nexport default AddLocation;\n","import React, { Fragment } from \"react\";\nimport CompanyRequests from \"./CompanyRequests\";\nimport CompanyInfo from \"./CompanyInfo\";\nimport AddLocation from \"./AddLocation\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction DashboardDetails(props) {\n  const { t } = useTranslation();\n  return (\n    <Fragment>\n      <h1>{t(\"RequestDetails\", \"Request Details\")}</h1>\n      <div className=\"details-container\">\n        <CompanyRequests />\n        <CompanyInfo />\n        <AddLocation />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default DashboardDetails;\n","import React, { useEffect, Fragment } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Card, Spin } from \"antd\";\nimport { isEmpty } from \"lodash\";\nimport {\n  fetchLabourSupply,\n  fetchLabourDemand,\n  fetchAvgWage,\n  fetchAvgWorkTime,\n} from \"../actions/companyActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nfunction MarketTrends() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchLabourSupply());\n    dispatch(fetchLabourDemand());\n    dispatch(fetchAvgWage());\n    dispatch(fetchAvgWorkTime());\n  }, []);\n  const {\n    labourSupplyStats,\n    labourDemandStats,\n    avgWageResult,\n    avgWorkTimeResult,\n  } = useSelector((state) => state.company);\n  return (\n    <Fragment>\n      <h1> {t(\"MarketTrends\", \"Market Trends\")}</h1>\n      <div className=\"market-trends-container\">\n        <Card\n          title= {t(\"LabourSupply\", \"Labour Supply\")}\n          style={{\n            borderRadius: \"20px\",\n            boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n            marginBottom: \"40px\",\n            width: \"70%\",\n          }}\n        >\n          {isEmpty(labourSupplyStats) ? (\n            <Spin />\n          ) : (\n            <Chart\n              options={{\n                chart: {\n                  id: \"labour-supply\",\n                },\n                xaxis: {\n                  text: \"Days\",\n                  label: {\n                    show: true,\n                  },\n                  categories: labourSupplyStats.days,\n                },\n              }}\n              series={[{ name: \"Supply\", data: labourSupplyStats.supply }]}\n              type=\"line\"\n            />\n          )}\n        </Card>\n        <Card\n          title= {t(\"LabourDemand\", \"Labour Demand\")}\n          style={{\n            borderRadius: \"20px\",\n            boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n            marginBottom: \"40px\",\n            width: \"70%\",\n          }}\n        >\n          {isEmpty(labourDemandStats) ? (\n            <Spin />\n          ) : (\n            <Chart\n              options={{\n                chart: {\n                  id: \"labour-demand\",\n                },\n                xaxis: {\n                  text: \"Days\",\n                  label: {\n                    show: true,\n                  },\n                  categories: labourDemandStats.days,\n                },\n              }}\n              series={[{ name: \"Demand\", data: labourDemandStats.demand }]}\n              type=\"line\"\n            />\n          )}\n        </Card>\n        <div className=\"market-trends-content\">\n          <Card\n            style={{\n              borderRadius: \"20px\",\n              boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n              marginBottom: \"40px\",\n              width: \"70%\",\n              textAlign: \"center\",\n            }}\n          >\n            <h3> {t(\"AverageWage\", \"Average Wage\")} </h3>\n            <h1 className=\"avg\">\n              {!isEmpty(avgWageResult) ? (\n                `Rs. ${Math.round(avgWageResult.avgWage)}`\n              ) : (\n                <Spin />\n              )}\n            </h1>\n          </Card>\n          <Card\n            style={{\n              borderRadius: \"20px\",\n              boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n              marginBottom: \"40px\",\n              width: \"70%\",\n              textAlign: \"center\",\n            }}\n          >\n            <h3> {t(\"AverageWorkTime\", \"Average Work Time\")} </h3>\n            <h1 className=\"avg\">\n              {!isEmpty(avgWorkTimeResult) ? (\n                `${Math.round(avgWorkTimeResult.avgWorkTime)} days`\n              ) : (\n                <Spin />\n              )}\n            </h1>\n          </Card>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default MarketTrends;\n","import React, { useEffect } from \"react\";\nimport { Spin } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { arrayTransform } from \"../helpers/arrayTransform\";\nimport { isEmpty } from \"lodash\";\nimport { fetchLabourSelection } from \"../actions/labourActions\";\nimport CompanyItem from \"./CompanyItem\";\nimport { useTranslation } from \"react-i18next\";\nfunction WorkersList(props) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchLabourSelection());\n  }, [dispatch]);\n  const {\n    labourSelection: { output },\n    labourSelectionLoading,\n  } = useSelector((state) => state.labour);\n  const finalResult = !isEmpty(output) ? arrayTransform(output) : [];\n  return (\n    <div>\n      <h1>{t(\"WorkersList\", \"Workers List\")}</h1>\n      {!labourSelectionLoading ? (\n        <CompanyItem data={finalResult} workersList={true} />\n      ) : (\n        <Spin />\n      )}\n    </div>\n  );\n}\n\nexport default WorkersList;\n","import React from \"react\";\nimport SideNav from \"./SideNav\";\nimport { Route } from \"react-router-dom\";\nimport DashboardHome from \"./DashboardHome\";\nimport DashboardDetails from \"./DashboardDetails\";\nimport MarketTrends from \"./MarketTrends\";\nimport WorkersList from \"./WorkersList\";\n\nfunction Dashboard({ match }) {\n  return (\n    <div className=\"dashboard-container\">\n      <SideNav />\n      <div class=\"dashboard-content\">\n        <Route exact path=\"/dashboard\" component={DashboardHome} />\n        <Route path=\"/dashboard/details\" component={DashboardDetails} />\n        <Route path=\"/dashboard/list\" component={WorkersList} />\n        <Route path=\"/dashboard/market-trends\" component={MarketTrends} />\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React, { useEffect } from \"react\";\nimport { Card, Spin } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport Chart from \"react-apexcharts\";\nimport { fetchActiveJobStat } from \"../actions/labourActions\";\nimport { useTranslation } from \"react-i18next\";\nfunction TotalCompanies() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchActiveJobStat());\n  }, [dispatch]);\n  const { activeJobStatResult } = useSelector((state) => state.labour);\n  return (\n    <Card\n      title= {t(\"ActiveJobsonSite\", \"Active Jobs on Site\")}\n      style={{\n        borderRadius: \"20px\",\n        borderRadius: \"20px\",\n        boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n      }}\n    >\n      {isEmpty(activeJobStatResult) ? (\n        <Spin />\n      ) : (\n        <h1 style={{ fontSize: \"3rem\" }}>{activeJobStatResult.totalJobs}</h1>\n      )}\n      <h2>{t(\"JobsDistribution\", \"Jobs Distribution\")}</h2>\n      {isEmpty(activeJobStatResult) ? (\n        <Spin />\n      ) : (\n        <Chart\n          options={{ labels: activeJobStatResult.topStates }}\n          series={activeJobStatResult.percentageShare}\n          type=\"pie\"\n        />\n      )}\n    </Card>\n  );\n}\n\nexport default TotalCompanies;\n","import React, { useEffect } from \"react\";\nimport { Card, Spin, List } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport TotalCompanies from \"./TotalCompanies\";\nimport {\n  coordinatorLookingFor,\n  coordinatorLabourName,\n} from \"../actions/coordinatorActions\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction LabourCompanyHeader(props) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(coordinatorLookingFor());\n    dispatch(coordinatorLabourName());\n  }, [dispatch]);\n  const { labourLookingForResult, labourName } = useSelector(\n    (state) => state.coordinator\n  );\n  return (\n    <div className=\"company-header-container\">\n      <Card\n        title={labourName.name}\n        style={{\n          borderRadius: \"20px\",\n          boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n        }}\n      >\n        {isEmpty(labourLookingForResult) ? (\n          <Spin />\n        ) : (\n          <div style={{ height: \"450px\", overflow: \"auto\" }}>\n            <List\n              header={<h2>{t(\"Requests\", \"Requests\")}</h2>}\n              bordered\n              dataSource={labourLookingForResult.map(\n                (item) =>\n                  `Looking for work in ${item.location} for ${item.days} days`\n              )}\n              renderItem={(item) => <List.Item>{item}</List.Item>}\n            />\n          </div>\n        )}\n      </Card>\n      <TotalCompanies />\n    </div>\n  );\n}\n\nexport default LabourCompanyHeader;\n","import React, { useEffect } from \"react\";\nimport { Spin } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { arrayTransformCompany } from \"../helpers/arrayTransform\";\nimport { isEmpty } from \"lodash\";\nimport CompanyItem from \"./CompanyItem\";\nimport { coordinatorCompanySelection } from \"../actions/coordinatorActions\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction CoordinatorCompanySelection() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(coordinatorCompanySelection());\n  }, [dispatch]);\n  const { labourSelectionLoading, companySelectionResult } = useSelector(\n    (state) => state.coordinator\n  );\n  const finalResult = !isEmpty(companySelectionResult)\n    ? arrayTransformCompany(companySelectionResult)\n    : [];\n  return (\n    <div>\n      <h1>{t(\"TopCompanies\", \"Top Companies\")}</h1>\n      {!labourSelectionLoading ? (\n        <CompanyItem data={finalResult.slice(0, 5)} />\n      ) : (\n        <Spin />\n      )}\n    </div>\n  );\n}\n\nexport default CoordinatorCompanySelection;\n","import React from \"react\";\nimport CoordinatorHeader from \"./CoordinatorHeader\";\nimport CoordinatorCompanySelection from \"./CoordinatorCompanySelection\";\nimport { useTranslation } from \"react-i18next\";\nfunction CoordinatorDashboardHome() {\n  const { t } = useTranslation();\n  return (\n    <div>\n      <h1>{t(\"Overview\", \"Overview\")}</h1>\n      <CoordinatorHeader />\n      <CoordinatorCompanySelection />\n    </div>\n  );\n}\n\nexport default CoordinatorDashboardHome;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  coordinatorJobAvailableStat,\n  coordinatorLabourName,\n  deleteCoordinator,\n} from \"../actions/coordinatorActions\";\nimport { logout } from \"../actions/authActions\";\nimport { isEmpty } from \"lodash\";\nimport { transFormJobObject } from \"../helpers/arrayTransform\";\nimport { Card, Button, List, Spin, Modal } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction CoordinatorRequests(props) {\n  const { t } = useTranslation();\n  const [modalState, setModalState] = useState({\n    modalText: \"Are you sure you want to delete\",\n    visible: false,\n  });\n  const showModal = () => setModalState({ ...modalState, visible: true });\n  const handleOk = () => {\n    //handle delete logic here...\n    dispatch(deleteCoordinator());\n    dispatch(logout());\n  };\n  const handleCancel = () => setModalState({ ...modalState, visible: false });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(coordinatorJobAvailableStat());\n    dispatch(coordinatorLabourName());\n  }, []);\n  const { jobAvailableStat, loading, labourName } = useSelector(\n    (state) => state.coordinator\n  );\n  const finalResultStat = !isEmpty(jobAvailableStat)\n    ? transFormJobObject(jobAvailableStat)\n    : [];\n  return (\n    <Card\n      style={{\n        borderRadius: \"20px\",\n        borderRadius: \"20px\",\n        boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n      }}\n    >\n      <h1>{labourName.name}</h1>\n      {isEmpty(finalResultStat) ? (\n        <Spin />\n      ) : (\n        <div style={{ height: \"450px\", overflow: \"auto\" }}>\n          <List\n            header={<h2>{t(\"CurrentRequests\", \"Current Requests\")}</h2>}\n            bordered\n            dataSource={finalResultStat.map(\n              (item) => `${item.jobs} in ${item.city}`\n            )}\n            renderItem={(item) => <List.Item>{item}</List.Item>}\n          />\n        </div>\n      )}\n\n      <Button\n        style={{ display: \"block\" }}\n        type=\"danger\"\n        size=\"large\"\n        onClick={showModal}\n      >\n        {t(\"DeleteAccount\", \"Delete Account\")}\n      </Button>\n      <Modal\n        title=\"Confirm\"\n        visible={modalState.visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <p>{t(\"SureDeleteAccount\", \"Are you sure you want to delete your whole account?\")}</p>\n      </Modal>\n    </Card>\n  );\n}\n\nexport default withRouter(CoordinatorRequests);\n","import React, { Fragment, useEffect } from \"react\";\nimport { Form, Input, Button, Card, Spin } from \"antd\";\nimport { isEmpty } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  coordinatorEditDetails,\n  coordinatorUpdateDetails,\n} from \"../actions/coordinatorActions\";\nimport { Icon } from \"@ant-design/compatible\";\nimport { useTranslation } from \"react-i18next\";\nfunction CoordinatorInfo() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(coordinatorEditDetails());\n  }, []);\n  const { editableLabourDetails } = useSelector((state) => state.coordinator);\n  if (isEmpty(editableLabourDetails)) return null;\n  return (\n    <Fragment>\n      <Card\n        title= {t(\"UpdateDetails\", \"Update Details\")}\n        style={{\n          borderRadius: \"20px\",\n          boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n        }}\n      >\n        {editableLabourDetails.coordinatorName &&\n        editableLabourDetails.coordinatorPhoneNumber ? (\n          <Form\n            initialValues={{\n              coordinatorName: editableLabourDetails.coordinatorName || \"\",\n              coordinatorPhoneNumber:\n                editableLabourDetails.coordinatorPhoneNumber || \"\",\n            }}\n            onFinish={(values) => {\n              console.log(values);\n              dispatch(coordinatorUpdateDetails(values));\n            }}\n          >\n            <Form.Item\n              name=\"coordinatorName\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter contact person name!\",\n                },\n              ]}\n            >\n              <Input\n                style={{ borderRadius: \"25px\" }}\n                prefix={\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder={t(\"WorkerPersonName\", \"Worker Person Name\")}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"coordinatorPhoneNumber\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter contact phone number!\",\n                },\n              ]}\n            >\n              <Input\n                style={{ borderRadius: \"25px\" }}\n                prefix={\n                  <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                name=\"number\"\n                placeholder= {t(\"ContactNumber\", \"Contact Number\")}\n              />\n            </Form.Item>\n            <Form.Item>\n              <Button\n                style={{\n                  height: \"auto\",\n                  backgroundColor: \"#5854FF\",\n                  borderRadius: \"24px\",\n                }}\n                type=\"primary\"\n                size=\"large\"\n                htmlType=\"submit\"\n              >\n                {t(\"Update\", \"Update\")}\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : (\n          <Spin />\n        )}\n\n        <Link to=\"/coordinator-info\">\n          <Button>{t(\"AddNewLabour\", \"Add New Labour\")}</Button>\n        </Link>\n      </Card>\n    </Fragment>\n  );\n}\n\nexport default CoordinatorInfo;\n","import React, { Fragment } from \"react\";\nimport CoordinatorRequests from \"./CoordinatorRequests\";\nimport CoordinatorInfo from \"./CoordinatorInfo\";\nimport AddLocation from \"./AddLocation\";\nimport { useTranslation } from \"react-i18next\";\nfunction LabourDashboardDetails(props) {\n  const { t } = useTranslation();\n  return (\n    <Fragment>\n      <h1>{t(\"Details\", \"Details\")}</h1>\n      <div className=\"details-container\">\n        {/* UNCOMMENT THIS ONCE YOU FIX THE API ISSUE */}\n        {<CoordinatorRequests />}\n        <CoordinatorInfo />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default LabourDashboardDetails;\n","import React, { useEffect } from \"react\";\nimport { Spin } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { arrayTransformCompany } from \"../helpers/arrayTransform\";\nimport { isEmpty } from \"lodash\";\nimport { coordinatorCompanySelection } from \"../actions/coordinatorActions\";\nimport CompanyItem from \"./CompanyItem\";\nimport { useTranslation } from \"react-i18next\";\nfunction CoordinatorCompanyList(props) {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  useEffect(() => {\n    dispatch(coordinatorCompanySelection());\n  }, [dispatch]);\n  const { companySelectionResult, labourSelectionLoading } = useSelector(\n    (state) => state.coordinator\n  );\n  const finalResult = !isEmpty(companySelectionResult)\n    ? arrayTransformCompany(companySelectionResult)\n    : [];\n  return (\n    <div>\n      <h1>{t(\"List\", \"List\")}</h1>\n      {!labourSelectionLoading ? (\n        <CompanyItem data={finalResult} coordinator={true} />\n      ) : (\n        <Spin />\n      )}\n    </div>\n  );\n}\n\nexport default CoordinatorCompanyList;\n","import React, { Fragment } from \"react\";\nimport SideNav from \"./SideNav\";\nimport { useSelector } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport ShowAlert from \"./ShowAlert\";\nimport CoordinatorDashboardHome from \"./CoordinatorDashboardHome\";\nimport CoordinatorDashboardDetails from \"./CoordinatorDashboardDetails\";\nimport CoordinatorCompanyList from \"./CoordinatorCompanyList\";\nimport MarketTrends from \"./MarketTrends\";\n\nfunction CoordinatorDashboard({ match }) {\n  const alerts = useSelector((state) => state.alerts);\n  return (\n    <Fragment>\n      {alerts && alerts.length > 0 && alerts.map((alert) => ShowAlert(alert))}\n      <div className=\"dashboard-container\">\n        <SideNav />\n        <div class=\"dashboard-content\">\n          <Route\n            exact\n            path=\"/coordinator-dashboard\"\n            component={CoordinatorDashboardHome}\n          />\n          <Route\n            path=\"/coordinator-dashboard/details\"\n            component={CoordinatorDashboardDetails}\n          />\n          <Route\n            path=\"/coordinator-dashboard/list\"\n            component={CoordinatorCompanyList}\n          />\n          <Route path=\"/dashboard/market-trends\" component={MarketTrends} />\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default CoordinatorDashboard;\n","import React, { useEffect } from \"react\";\nimport { Card, Spin, List } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport TotalCompanies from \"./TotalCompanies\";\nimport { labourLookingFor, fetchLabourName } from \"../actions/labourActions\";\nimport { useTranslation } from \"react-i18next\";\nfunction LabourCompanyHeader(props) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(labourLookingFor());\n    dispatch(fetchLabourName());\n  }, [dispatch]);\n  const { labourLookingForResult, labourName } = useSelector(\n    (state) => state.labour\n  );\n  return (\n    <div className=\"company-header-container\">\n      <Card\n        title={labourName.name}\n        style={{\n          borderRadius: \"20px\",\n          boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n        }}\n      >\n        {isEmpty(labourLookingForResult) ? (\n          <Spin />\n        ) : (\n          <div style={{ height: \"450px\", overflow: \"auto\" }}>\n            <List\n              header={<h2> {t(\"CurrentRequests\", \"Requests\")}</h2>}\n              bordered\n              dataSource={labourLookingForResult.map(\n                (item) =>\n                  `Looking for work in ${item.location} for ${item.days} days`\n              )}\n              renderItem={(item) => <List.Item>{item}</List.Item>}\n            />\n          </div>\n        )}\n      </Card>\n      <TotalCompanies />\n    </div>\n  );\n}\n\nexport default LabourCompanyHeader;\n","import React, { useEffect } from \"react\";\nimport { Spin } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { arrayTransformCompany } from \"../helpers/arrayTransform\";\nimport { isEmpty } from \"lodash\";\nimport CompanyItem from \"./CompanyItem\";\nimport { companySelection } from \"../actions/labourActions\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction CompanySelection() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(companySelection());\n  }, [dispatch]);\n  const { companySelectionResult } = useSelector((state) => state.labour);\n  const finalResult = !isEmpty(companySelectionResult)\n    ? arrayTransformCompany(companySelectionResult)\n    : [];\n  return (\n    <div>\n      <h1>{t(\"TopCompanies\", \"Top Companies\")}</h1>\n      {!isEmpty(finalResult) ? (\n        <CompanyItem data={finalResult.slice(0, 5)} />\n      ) : (\n        <Spin />\n      )}\n    </div>\n  );\n}\n\nexport default CompanySelection;\n","import React from \"react\";\nimport LabourCompanyHeader from \"./LabourCompanyHeader\";\nimport CompanySelection from \"./CompanySelection\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction DashboardHome(props) {\n  const { t } = useTranslation();\n  return (\n    <div>\n      <h1>{t(\"LabourOverview\", \"Labour Overview\")}</h1>\n      <LabourCompanyHeader />\n      <CompanySelection />\n    </div>\n  );\n}\n\nexport default DashboardHome;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  fetchJobAvailableStats,\n  fetchLabourName,\n  deleteLabour,\n} from \"../actions/labourActions\";\nimport { logout } from \"../actions/authActions\";\nimport { isEmpty } from \"lodash\";\nimport { transFormJobObject } from \"../helpers/arrayTransform\";\nimport { Card, Button, List, Spin, Modal } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nfunction LabourRequests(props) {\n  const { t } = useTranslation();\n  const [modalState, setModalState] = useState({\n    modalText: \"Are you sure you want to delete\",\n    visible: false,\n  });\n  const showModal = () => setModalState({ ...modalState, visible: true });\n  const handleOk = () => {\n    //handle delete logic here...\n    dispatch(deleteLabour());\n    dispatch(logout());\n  };\n  const handleCancel = () => setModalState({ ...modalState, visible: false });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchJobAvailableStats());\n    dispatch(fetchLabourName());\n  }, []);\n  const { jobAvailableStat, loading, labourName } = useSelector(\n    (state) => state.labour\n  );\n  const finalResultStat = !isEmpty(jobAvailableStat)\n    ? transFormJobObject(jobAvailableStat)\n    : [];\n  return (\n    <Card\n      style={{\n        borderRadius: \"20px\",\n        borderRadius: \"20px\",\n        boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n      }}\n    >\n      <h1>{labourName.name}</h1>\n      {isEmpty(finalResultStat) ? (\n        <Spin />\n      ) : (\n        <div style={{ height: \"450px\", overflow: \"auto\" }}>\n          <List\n            header={<h2>{t(\"CurrentRequests\", \"Current Requests\")}</h2>}\n            bordered\n            dataSource={finalResultStat.map(\n              (item) => `${item.jobs} in ${item.city}`\n            )}\n            renderItem={(item) => <List.Item>{item}</List.Item>}\n          />\n        </div>\n      )}\n\n      <Button\n        style={{ display: \"block\" }}\n        type=\"danger\"\n        size=\"large\"\n        onClick={showModal}\n      >\n         {t(\"DeleteAccount\", \"Delete Account\")}\n      </Button>\n      <Modal\n        title=\"Confirm\"\n        visible={modalState.visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <p> {t(\"SureDeleteAccount\", \"Are you sure you want to delete your whole account?\")}</p>\n      </Modal>\n    </Card>\n  );\n}\n\nexport default withRouter(LabourRequests);\n","import React, { Fragment, useEffect } from \"react\";\nimport { Form, Input, Button, Card, Spin } from \"antd\";\nimport { isEmpty } from \"lodash\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchEditableLabour,\n  updateLabourContact,\n} from \"../actions/labourActions\";\nimport { useTranslation } from \"react-i18next\";\nimport { Icon } from \"@ant-design/compatible\";\n\nfunction LabourInfo() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchEditableLabour());\n  }, []);\n  const { editableLabourDetails } = useSelector((state) => state.labour);\n  if (isEmpty(editableLabourDetails)) return null;\n  return (\n    <Fragment>\n      <Card\n        title={t(\"UpdateDetails\", \"Update Details\")}\n        style={{\n          borderRadius: \"20px\",\n          boxShadow: \"0 10px 25px 0 rgba(0,0,0,0.09)\",\n        }}\n      >\n        {editableLabourDetails.workerName &&\n        editableLabourDetails.workerPhoneNumber ? (\n          <Form\n            initialValues={{\n              workerName: editableLabourDetails.workerName || \"\",\n              workerPhoneNumber: editableLabourDetails.workerPhoneNumber || \"\",\n            }}\n            onFinish={(values) => {\n              console.log(values);\n              dispatch(updateLabourContact(values));\n            }}\n          >\n            <Form.Item\n              name=\"workerName\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter contact person name!\",\n                },\n              ]}\n            >\n              <Input\n                style={{ borderRadius: \"25px\" }}\n                prefix={\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder= {t(\"WorkerPersonName\", \"Worker Person Name\")}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"workerPhoneNumber\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter contact phone number!\",\n                },\n              ]}\n            >\n              <Input\n                style={{ borderRadius: \"25px\" }}\n                prefix={\n                  <Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                name=\"number\"\n                placeholder=\"Contact Number\"\n              />\n            </Form.Item>\n            <Form.Item>\n              <Button\n                style={{\n                  height: \"auto\",\n                  backgroundColor: \"#5854FF\",\n                  borderRadius: \"24px\",\n                }}\n                type=\"primary\"\n                size=\"large\"\n                htmlType=\"submit\"\n              >\n                 {t(\"Update\", \"Update\")}\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : (\n          <Spin />\n        )}\n      </Card>\n    </Fragment>\n  );\n}\n\nexport default LabourInfo;\n","import React, { Fragment } from \"react\";\nimport LabourRequests from \"./LabourRequests\";\nimport LabourInfo from \"./LabourInfo\";\nimport AddLocation from \"./AddLocation\";\nimport { useTranslation } from \"react-i18next\";\nfunction LabourDashboardDetails(props) {\n  const { t } = useTranslation();\n  return (\n    <Fragment>\n      <h1>{t(\"Details\", \"Details\")}</h1>\n      <div className=\"details-container\">\n        <LabourRequests />\n        <LabourInfo />\n        {/* <AddLocation /> */}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default LabourDashboardDetails;\n","import React, { useEffect } from \"react\";\nimport { Spin } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { arrayTransformCompany } from \"../helpers/arrayTransform\";\nimport { isEmpty } from \"lodash\";\nimport { companySelection } from \"../actions/labourActions\";\nimport CompanyItem from \"./CompanyItem\";\nimport { useTranslation } from \"react-i18next\";\nfunction WorkersList(props) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(companySelection());\n  }, [dispatch]);\n  const { companySelectionResult } = useSelector((state) => state.labour);\n  const finalResult = !isEmpty(companySelectionResult)\n    ? arrayTransformCompany(companySelectionResult)\n    : [];\n  return (\n    <div>\n      <h1>{t(\"WorkersList\", \"Workers List\")}</h1>\n      {!isEmpty(finalResult) ? <CompanyItem data={finalResult} /> : <Spin />}\n    </div>\n  );\n}\n\nexport default WorkersList;\n","import React, { Fragment } from \"react\";\nimport SideNav from \"./SideNav\";\nimport { useSelector } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport ShowAlert from \"./ShowAlert\";\nimport LabourDashboardHome from \"./LabourDashboardHome\";\nimport LabourDashboardDetails from \"./LabourDashboardDetails\";\nimport CompanyList from \"./CompanyList\";\nimport MarketTrends from \"./MarketTrends\";\n\nfunction LabourDashboard({ match }) {\n  const alerts = useSelector((state) => state.alerts);\n  return (\n    <Fragment>\n      {alerts && alerts.length > 0 && alerts.map((alert) => ShowAlert(alert))}\n      <div className=\"dashboard-container\">\n        <SideNav />\n        <div class=\"dashboard-content\">\n          <Route\n            exact\n            path=\"/labour-dashboard\"\n            component={LabourDashboardHome}\n          />\n          <Route\n            path=\"/labour-dashboard/details\"\n            component={LabourDashboardDetails}\n          />\n          <Route path=\"/labour-dashboard/list\" component={CompanyList} />\n          <Route path=\"/dashboard/market-trends\" component={MarketTrends} />\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default LabourDashboard;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { isAuthenticated, loading } = useSelector((state) => state.auth);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isAuthenticated && !loading ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport setAuthToken from \"./helpers/setAuthToken\";\nimport Nav from \"./components/Nav\";\nimport LanguageSelection from \"./components/LanguageSelection\";\nimport Register from \"./components/Register\";\nimport CheckEntity from \"./components/CheckEntity\";\nimport CompanyOnBoard from \"./components/CompanyOnBoard\";\nimport CompanyOnBoard2 from \"./components/CompanyOnBoard2\";\nimport LabourOnBoard from \"./components/LabourOnBoard\";\nimport CoordinatorOnBoard from \"./components/CoordinatorOnBoard\";\nimport CoordinatorRegister from \"./components/CoordinatorRegister\";\nimport Login from \"./components/Login\";\nimport EntitySelection from \"./components/EntitySelection\";\nimport Dashboard from \"./components/Dashboard\";\nimport CoordinatorDashboard from \"./components/CoordinatorDashboard\";\nimport LabourDashboard from \"./components/LabourDashboard\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport { loadUser } from \"./actions/authActions\";\nimport \"./App.css\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadUser());\n  });\n  return (\n    <Router>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={LanguageSelection} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n        <PrivateRoute exact path=\"/labour-info\" component={LabourOnBoard} />\n        <PrivateRoute\n          exact\n          path=\"/coordinator-info\"\n          component={CoordinatorOnBoard}\n        />\n        <PrivateRoute\n          exact\n          path=\"/coordinator-register\"\n          component={CoordinatorRegister}\n        />\n        <PrivateRoute exact path=\"/check-entity\" component={CheckEntity} />\n        <PrivateRoute exact path=\"/company-info\" component={CompanyOnBoard} />\n        <PrivateRoute\n          exact\n          path=\"/company-info-2\"\n          component={CompanyOnBoard2}\n        />\n        <Route exact path=\"/entity\" component={EntitySelection} />\n        <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n        <PrivateRoute\n          path=\"/coordinator-dashboard\"\n          component={CoordinatorDashboard}\n        />\n        <PrivateRoute path=\"/labour-dashboard\" component={LabourDashboard} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport Backend from \"i18next-xhr-backend\";\n\ni18n\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // connect with React\n  .use(initReactI18next)\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    debug: true,\n\n    lng: \"en\",\n    fallbackLng: \"en\",\n    whitelist: [\"en\", \"hi\"],\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18n;","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App\";\nimport \"./i18n\";\n\nReactDOM.render(\n  <Provider store={store}>\n     <Suspense fallback={null}>\n      <App />\n    </Suspense>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}